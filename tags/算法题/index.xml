<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法题 - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/%E7%AE%97%E6%B3%95%E9%A2%98/</link>
        <description>算法题 - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 18 Nov 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/%E7%AE%97%E6%B3%95%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>我做的第一个打表题</title>
    <link>https://vllbc.top/%E6%88%91%E5%81%9A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%89%93%E8%A1%A8%E9%A2%98/</link>
    <pubDate>Fri, 18 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%88%91%E5%81%9A%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%89%93%E8%A1%A8%E9%A2%98/</guid>
    <description><![CDATA[我做的第一个打表题 今天在洛谷刷题，从题单里面开始一点一点刷，然后发现了这道题 阶乘之和 题目的要求很简单，就是将1-n的所有数的阶乘相加起来。 因]]></description>
</item>
<item>
    <title>把数字翻译成字符串</title>
    <link>https://vllbc.top/%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Thu, 17 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[把数字翻译成字符串 题目： https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/ 思路： dp思想，不用管是什么字符，定义dp[i]为长度为i时 有多少个方法 代码: class Solution: def translateNum(self, num: int) -&gt; int: s = str(num) if len(s) &lt; 2: return 1 dp]]></description>
</item>
<item>
    <title>新手时期的一个题</title>
    <link>https://vllbc.top/%E6%96%B0%E6%89%8B%E6%97%B6%E6%9C%9F%E7%9A%84%E4%B8%80%E4%B8%AA%E9%A2%98/</link>
    <pubDate>Tue, 01 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%96%B0%E6%89%8B%E6%97%B6%E6%9C%9F%E7%9A%84%E4%B8%80%E4%B8%AA%E9%A2%98/</guid>
    <description><![CDATA[新手时期的一个题 前几天在洛谷刚刷的一个题目 当时在一些地方踩了坑，写出来吸取教训 洛谷链接：https://www.luogu.com.cn/p]]></description>
</item>
<item>
    <title>字符串转换整数 (atoi)</title>
    <link>https://vllbc.top/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</link>
    <pubDate>Wed, 26 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</guid>
    <description><![CDATA[字符串转换整数 (atoi) https://leetcode-cn.com/problems/string-to-integer-atoi/ #重点是正则表达式 class Solution: def myAtoi(s: str): import re ss = re.findall(&#34;^[\+\-]?\d+&#34;,s.strip()) res = int(*ss) if res &gt; (231-1): res = (231-1) if res &lt; -231: res = -231 return res WA了四次才整出来，太菜了，以为很简单，没有认]]></description>
</item>
<item>
    <title>分发饼干</title>
    <link>https://vllbc.top/%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</link>
    <pubDate>Mon, 03 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</guid>
    <description><![CDATA[分发饼干 https://leetcode-cn.com/problems/assign-cookies/ class Solution: def findContentChildren(g, s) -&gt; int: g = sorted(g) s = sorted(s) n = 0 for i in range(len(s)): if g[n] &lt;= s[i]: n += 1 if n == len(g): return n return n 贪心算法的题目，考虑局部最优]]></description>
</item>
<item>
    <title>去除重复字母</title>
    <link>https://vllbc.top/%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D/</link>
    <pubDate>Fri, 02 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E5%8E%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E5%AD%97%E6%AF%8D/</guid>
    <description><![CDATA[去除重复字母 一开始看到题目感觉挺简单的，没想到对现在的我挺有难度。。 https://leetcode-cn.com/problems/remove-duplicate-letters/ #1 class Solution: def removeDuplicateLetters(s: str): res = &#34;&#34; while s: #用递归也可以 loc = min(map(s.rindex,s)) #s.rindex是返回列表]]></description>
</item>
<item>
    <title>最长回文子串</title>
    <link>https://vllbc.top/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link>
    <pubDate>Thu, 21 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid>
    <description><![CDATA[最长回文子串 题目： ​ https://leetcode-cn.com/problems/longest-palindromic-substring/ 思路： ​ 一开始暴力解法，比较好想，结果超时了哎，后来看见了标签是动态规划，才知道不能暴力 class Solution: def longestPalindrome(self, s: str) -&gt; str: if len(s) &lt;= 1: return s maxs]]></description>
</item>
<item>
    <title>有效的数独</title>
    <link>https://vllbc.top/%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</link>
    <pubDate>Wed, 20 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%9C%89%E6%95%88%E7%9A%84%E6%95%B0%E7%8B%AC/</guid>
    <description><![CDATA[有效的数独 https://leetcode-cn.com/problems/valid-sudoku/ #有效的数独 难点在将3*3里的数取出来 class Solution: def isValidSudoku(board) -&gt; bool: for line1,line2 in zip(board,zip(*board)): #行列 for n1,n2 in zip(line1,line2): if (n1 != &#39;.&#39; and line1.count(n1) &gt; 1) or (n2!=&#39;.&#39; and line2.count(n2) &gt;1): return False pal = [[board[i+m][j+n] for m in range(3) for n in range(3) if board[i+m][j+n]]]></description>
</item>
<item>
    <title>使括号有效的最少添加</title>
    <link>https://vllbc.top/%E4%BD%BF%E6%8B%AC%E5%8F%B7%E6%9C%89%E6%95%88%E7%9A%84%E6%9C%80%E5%B0%91%E6%B7%BB%E5%8A%A0/</link>
    <pubDate>Sun, 17 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E4%BD%BF%E6%8B%AC%E5%8F%B7%E6%9C%89%E6%95%88%E7%9A%84%E6%9C%80%E5%B0%91%E6%B7%BB%E5%8A%A0/</guid>
    <description><![CDATA[使括号有效的最少添加 题目： https://leetcode-cn.com/problems/minimum-add-to-make-parentheses-valid/ 思路： 通过一个值来判断是否匹配 代码： class Solution: def minAddToMakeValid(self, S: str) -&gt; int: res,temp = 0,0 for i in S: if i == &#39;(&#39;: temp += 1 if i == &#39;)&#39;: temp -= 1 if temp == -1: temp = 0 res +=]]></description>
</item>
<item>
    <title>旋转图像</title>
    <link>https://vllbc.top/%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</link>
    <pubDate>Thu, 07 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%97%8B%E8%BD%AC%E5%9B%BE%E5%83%8F/</guid>
    <description><![CDATA[旋转图像 https://leetcode-cn.com/problems/rotate-image/ 没难度的中等题，这方法很python class Solution: def rotate(self, matrix: List[List[int]]) -&gt; None: &#34;&#34;&#34; Do not return anything, modify matrix in-place instead. &#34;&#34;&#34; n = len(matrix) for i in list(map(list,map(reversed,zip(*matrix)))): matrix.append(i) del matrix[:n]]]></description>
</item>
</channel>
</rss>
