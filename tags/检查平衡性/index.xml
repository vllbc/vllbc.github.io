<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>检查平衡性 - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E6%80%A7/</link>
        <description>检查平衡性 - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 27 Oct 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E6%80%A7/" rel="self" type="application/rss+xml" /><item>
    <title>检查平衡性</title>
    <link>https://vllbc.top/%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E6%80%A7/</link>
    <pubDate>Wed, 27 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E6%80%A7/</guid>
    <description><![CDATA[检查平衡性 题目： https://leetcode-cn.com/problems/check-balance-lcci/ 思路： 算深度，然后作差是否大于1 代码： # Definition for a binary tree node. # class TreeNode: # def __init__(self, x): # self.val = x # self.left = None # self.right = None class Solution: def isBalanced(self, root: TreeNode) -&gt; bool: if self.maxdepth(root) &lt; 1: return True if abs(self.maxdepth(root.left)]]></description>
</item>
</channel>
</rss>
