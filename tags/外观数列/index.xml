<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>外观数列 - 标签 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/tags/%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</link>
        <description>外观数列 - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 16 Feb 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/tags/%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/" rel="self" type="application/rss+xml" /><item>
    <title>外观数列</title>
    <link>https://blog.vllbc.top/%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</link>
    <pubDate>Tue, 16 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%A4%96%E8%A7%82%E6%95%B0%E5%88%97/</guid>
    <description><![CDATA[<h1 id="外观数列">外观数列</h1>
<p><a
href="https://leetcode-cn.com/problems/count-and-say/">https://leetcode-cn.com/problems/count-and-say/</a></p>
<p>这题有意思</p>
<p>可以打表，不过打表的过程也相当于做出来了</p>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> Solution:</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="kw">def</span> countAndSay(<span class="va">self</span>,n: <span class="bu">int</span>) <span class="op">-&gt;</span> <span class="bu">str</span>:</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> n <span class="op">==</span> <span class="dv">1</span>:</span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a>           <span class="cf">return</span> <span class="st">&#39;1&#39;</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a>        s <span class="op">=</span> <span class="va">self</span>.countAndSay(n <span class="op">-</span> <span class="dv">1</span>)</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>        n,res <span class="op">=</span> <span class="dv">0</span>,<span class="st">&#39;&#39;</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> ii,ss <span class="kw">in</span> <span class="bu">enumerate</span>(s):</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> ss <span class="op">!=</span> s[n]:</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>                res <span class="op">+=</span> <span class="bu">str</span>(ii<span class="op">-</span>n) <span class="op">+</span> s[n]</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>                n <span class="op">=</span> ii</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>        res <span class="op">+=</span> <span class="bu">str</span>(<span class="bu">len</span>(s) <span class="op">-</span> n) <span class="op">+</span> s[<span class="op">-</span><span class="dv">1</span>]</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> res</span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="bu">print</span>(Solution().countAndSay(<span class="dv">3</span>))</span></code></pre></div>
<p>思路：</p>
<p>​ 递归，将上一层计算出来的东西作为迭代对象。</p>]]></description>
</item>
</channel>
</rss>
