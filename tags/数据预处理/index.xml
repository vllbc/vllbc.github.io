<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>数据预处理 - 标签 - vllbc02&#39;s blogs</title>
        <link>http://localhost:1313/tags/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</link>
        <description>数据预处理 - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 02 Jul 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/" rel="self" type="application/rss+xml" /><item>
    <title>数据预处理</title>
    <link>http://localhost:1313/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</link>
    <pubDate>Sat, 02 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86/</guid>
    <description><![CDATA[<h2 id="导入必要的包">导入必要的包</h2>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> pandas <span class="im">as</span> pd</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> numpy <span class="im">as</span> np</span></code></pre></div>
<p>读入数据</p>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>data <span class="op">=</span> pd.read_csv(<span class="st">&quot;./datasets/Data.csv&quot;</span>)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>data.head()</span></code></pre></div>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }


    .dataframe tbody tr th {
        vertical-align: top;
    }
    
    .dataframe thead th {
        text-align: right;
    }

</style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
</th>
<th>
Country
</th>
<th>
Age
</th>
<th>
Salary
</th>
<th>
Purchased
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
France
</td>
<td>
44.0
</td>
<td>
72000.0
</td>
<td>
No
</td>
</tr>
<tr>
<th>
1
</th>
<td>
Spain
</td>
<td>
27.0
</td>
<td>
48000.0
</td>
<td>
Yes
</td>
</tr>
<tr>
<th>
2
</th>
<td>
Germany
</td>
<td>
30.0
</td>
<td>
54000.0
</td>
<td>
No
</td>
</tr>
<tr>
<th>
3
</th>
<td>
Spain
</td>
<td>
38.0
</td>
<td>
61000.0
</td>
<td>
No
</td>
</tr>
<tr>
<th>
4
</th>
<td>
Germany
</td>
<td>
40.0
</td>
<td>
NaN
</td>
<td>
Yes
</td>
</tr>
</tbody>
</table>
</div>
<h2 id="确定xy变量">确定X,Y变量</h2>
<div class="sourceCode" id="cb3"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>X <span class="op">=</span> data.iloc[:,:<span class="op">-</span><span class="dv">1</span>].values</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>Y <span class="op">=</span> data.iloc[:,<span class="dv">3</span>].values</span></code></pre></div>
<h2 id="数据空值处理">数据空值处理</h2>
<div class="sourceCode" id="cb4"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.impute <span class="im">import</span> SimpleImputer</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>imputer <span class="op">=</span> SimpleImputer()</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>X[:,<span class="dv">1</span>:<span class="dv">3</span>] <span class="op">=</span> imputer.fit_transform(X[:,<span class="dv">1</span>:<span class="dv">3</span>])</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>X</span></code></pre></div>
<pre><code>array([[&#39;France&#39;, 44.0, 72000.0],
       [&#39;Spain&#39;, 27.0, 48000.0],
       [&#39;Germany&#39;, 30.0, 54000.0],
       [&#39;Spain&#39;, 38.0, 61000.0],
       [&#39;Germany&#39;, 40.0, 63777.77777777778],
       [&#39;France&#39;, 35.0, 58000.0],
       [&#39;Spain&#39;, 38.77777777777778, 52000.0],
       [&#39;France&#39;, 48.0, 79000.0],
       [&#39;Germany&#39;, 50.0, 83000.0],
       [&#39;France&#39;, 37.0, 67000.0]], dtype=object)</code></pre>
<h2 id="编码处理">编码处理</h2>
<div class="sourceCode" id="cb6"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.preprocessing <span class="im">import</span> LabelEncoder,OneHotEncoder</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>labelencoder <span class="op">=</span> LabelEncoder()</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>X[:,<span class="dv">0</span>] <span class="op">=</span> labelencoder.fit_transform(X[:,<span class="dv">0</span>])</span></code></pre></div>
<div class="sourceCode" id="cb7"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a>onehotencoder <span class="op">=</span> OneHotEncoder()</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>X <span class="op">=</span> onehotencoder.fit_transform(X).toarray()</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>labelencoder_Y <span class="op">=</span> LabelEncoder()</span>
<span id="cb7-4"><a href="#cb7-4" aria-hidden="true" tabindex="-1"></a>Y <span class="op">=</span> labelencoder_Y.fit_transform(Y)</span></code></pre></div>
<h2 id="分割数据">分割数据</h2>
<div class="sourceCode" id="cb8"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb8-1"><a href="#cb8-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.model_selection <span class="im">import</span> train_test_split</span>
<span id="cb8-2"><a href="#cb8-2" aria-hidden="true" tabindex="-1"></a>X_train,X_test,Y_train,Y_test <span class="op">=</span> train_test_split(X,Y,test_size<span class="op">=</span><span class="fl">0.2</span>,</span>
<span id="cb8-3"><a href="#cb8-3" aria-hidden="true" tabindex="-1"></a>                                                 random_state<span class="op">=</span><span class="dv">0</span>)</span></code></pre></div>
<h2 id="标准化">标准化</h2>
<div class="sourceCode" id="cb9"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb9-1"><a href="#cb9-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.preprocessing <span class="im">import</span> StandardScaler</span>
<span id="cb9-2"><a href="#cb9-2" aria-hidden="true" tabindex="-1"></a>sc_X <span class="op">=</span> StandardScaler()</span>
<span id="cb9-3"><a href="#cb9-3" aria-hidden="true" tabindex="-1"></a>X_train <span class="op">=</span> sc_X.fit_transform(X_train)</span>
<span id="cb9-4"><a href="#cb9-4" aria-hidden="true" tabindex="-1"></a>X_test <span class="op">=</span> sc_X.fit_transform(X_test)</span></code></pre></div>]]></description>
</item>
</channel>
</rss>
