<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>pandas - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/pandas/</link>
        <description>pandas - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 29 Nov 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/pandas/" rel="self" type="application/rss+xml" /><item>
    <title>bincount</title>
    <link>https://vllbc.top/bincount/</link>
    <pubDate>Tue, 29 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/bincount/</guid>
    <description><![CDATA[很简单，就是统计x中的数出现次数，返回结果的最大长度就是x中的最大值+1，idx为对应的数，值为出现的次数，没有出现的为0。 x = np.array([7, 6, 2, 1, 4]) #]]></description>
</item>
<item>
    <title>task2</title>
    <link>https://vllbc.top/task2/</link>
    <pubDate>Wed, 28 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/task2/</guid>
    <description><![CDATA[age workclass fnlwgt education education-num marital-status occupation relationship race sex capital-gain capital-loss hours-per-week native-country salary 0 39 State-gov 77516 Bachelors 13 Never-married Adm-clerical Not-in-family White Male 2174 0 40 United-States &lt;=50K 1 50 Self-emp-not-inc 83311 Bachelors 13 Married-civ-spouse Exec-managerial Husband White Male 0 0 13 United-States &lt;=50K 2 38 Private 215646 HS-grad 9 Divorced Handlers-cleaners Not-in-family White Male 0 0 40 United-States &lt;=50K 3 53 Private 234721 11th 7 Married-civ-spouse]]></description>
</item>
<item>
    <title>task1</title>
    <link>https://vllbc.top/task1/</link>
    <pubDate>Tue, 20 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/task1/</guid>
    <description><![CDATA[pandas实践1 在读取数据之前，我修改了表格里面的表头，以便程序的编写。 先从 excel 读取数据,然后看看 shape 了解行数列数,然后调用 info 方法， 看看有没有]]></description>
</item>
<item>
    <title>learn_two</title>
    <link>https://vllbc.top/learn_two/</link>
    <pubDate>Sat, 26 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/learn_two/</guid>
    <description><![CDATA[import pandas as pd import numpy as np 读取文件 df = pd.read_csv( &#39;https://labfile.oss.aliyuncs.com/courses/1283/telecom_churn.csv&#39;) df.head() State Account length Area code International plan Voice mail plan Number vmail messages Total day minutes Total day calls Total day charge Total eve minutes Total eve calls Total eve charge Total night minutes Total night calls Total night charge Total intl minutes Total intl calls Total intl charge Customer service calls Churn]]></description>
</item>
<item>
    <title>learn_four</title>
    <link>https://vllbc.top/learn_four/</link>
    <pubDate>Tue, 22 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/learn_four/</guid>
    <description><![CDATA[pandas补充学习 推荐网站：http://joyfulpandas.datawhale.club/Content/Preface.html]]></description>
</item>
<item>
    <title>rot90</title>
    <link>https://vllbc.top/rot90/</link>
    <pubDate>Sat, 12 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/rot90/</guid>
    <description><![CDATA[正为逆时针转，负为顺时针转。 import numpy as np mat = np.array([[1,3,5], [2,4,6], [7,8,9] ]) print mat, &#34;# orignal&#34; mat90 = np.rot90(mat, 1) print mat90, &#34;# rorate 90 &lt;left&gt; anti-clockwise&#34; mat90 = np.rot90(mat, -1) print mat90, &#34;# rorate 90 &lt;right&gt; clockwise&#34; mat180 = np.rot90(mat, 2) print mat180, &#34;# rorate 180 &lt;left&gt; anti-clockwise&#34; mat270 = np.rot90(mat, 3) print mat270, &#34;# rorate 270]]></description>
</item>
<item>
    <title>melt</title>
    <link>https://vllbc.top/melt/</link>
    <pubDate>Wed, 12 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/melt/</guid>
    <description><![CDATA[pd.melt 用法 直观的看就是将宽数据转化为长数据。转化为variable-value这样的形式。 pandas.melt(frame, id_vars=None, value_vars=None, var_name=None, value_name=&#39;value&#39;, col_level=None) 参数解释： frame:要处理的数据集。 id]]></description>
</item>
<item>
    <title>flip</title>
    <link>https://vllbc.top/flip/</link>
    <pubDate>Sat, 01 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/flip/</guid>
    <description><![CDATA[矩阵的反转，可以按照各个维度很好理解。 例子： cs_matrix = np.array([[ 4, 3, 2, 1, 0], [ 8, 7, 6, 5, 1], [11, 10, 9, 6, 2], [13, 12, 10, 7, 3], [14, 13, 11, 8, 4]]) np.flip(cs_matrix, 0) 变成了： np.flip(cs_matrix, 1) 变成了：]]></description>
</item>
<item>
    <title>learn_three</title>
    <link>https://vllbc.top/learn_three/</link>
    <pubDate>Sun, 24 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/learn_three/</guid>
    <description><![CDATA[记录一下实训学到的内容 布尔索引 布尔索引不能使用and or not ，只能用&amp; | ~ 因为只能用位操作符 花哨索引 arr = np.arange(32).reshape((8, 4)) arr array([[ 0, 1, 2, 3], [ 4, 5, 6, 7], [ 8, 9,]]></description>
</item>
<item>
    <title>apply_along_axis</title>
    <link>https://vllbc.top/apply_along_axis/</link>
    <pubDate>Fri, 03 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/apply_along_axis/</guid>
    <description><![CDATA[类似于pandas的apply，就是在某一维上进行定义的函数操作 apply_along_axis(func1d, axis, arr, *args, **kwargs) 官网的例子 def my_func(a): return (a[0] + a[-1]) * 0.5 b = np.array([[1,2,3], [4,5,6], [7,8,9]]) np.apply_along_axis(my_func, 0, b) # 结果 array([ 4., 5., 6.]) # 结果 array([ 2.,]]></description>
</item>
</channel>
</rss>
