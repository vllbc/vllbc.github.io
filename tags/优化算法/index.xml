<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>优化算法 - 标签 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/tags/%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/</link>
        <description>优化算法 - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 11 Sep 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/tags/%E4%BC%98%E5%8C%96%E7%AE%97%E6%B3%95/" rel="self" type="application/rss+xml" /><item>
    <title>Adam算法</title>
    <link>https://blog.vllbc.top/adam/</link>
    <pubDate>Sun, 11 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/adam/</guid>
    <description><![CDATA[<h1 id="adam算法">Adam算法</h1>
<h2 id="背景">背景</h2>
<p>作为机器学习的初学者必然会接触梯度下降算法以及SGD，基本上形式如下：</p>
<p><span class="math display">\[
\theta_t = \theta_{t-1} - \alpha \;g(\theta)
\]</span> 其中<span class="math inline">\(\alpha\)</span>为学习率，<span
class="math inline">\(g(\theta)\)</span>为梯度。</p>]]></description>
</item>
<item>
    <title>反向传播算法</title>
    <link>https://blog.vllbc.top/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/</link>
    <pubDate>Sat, 09 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%8F%8D%E5%90%91%E4%BC%A0%E6%92%AD%E7%AE%97%E6%B3%95/</guid>
    <description><![CDATA[<p>反向传播算法遵循两个法则：梯度下降法则和链式求导法则。</p>
<p>梯度下降法则不用多说，记住一切的目的就是为了减小损失，即朝着局部最小值点移动。链式求导也就是高数中学的那一套。具体地看一个推导就可以了，反向传播需要一步一步来，要搞清楚每一步在做什么。</p>]]></description>
</item>
<item>
    <title>梯度下降法</title>
    <link>https://blog.vllbc.top/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/</link>
    <pubDate>Tue, 04 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E6%A2%AF%E5%BA%A6%E4%B8%8B%E9%99%8D%E6%B3%95/</guid>
    <description><![CDATA[<h1 id="梯度下降法">梯度下降法</h1>
<h2 id="简介">简介</h2>
<p></p>
<h2 id="批度梯度下降">批度梯度下降</h2>
<p>其实就是一次将整个数据集进行梯度下降的迭代 
## 随机梯度下降
就是对样本进行循环，每循环一个样本就更新一次参数，但是不容易收敛 </p>
<h2 id="小批量梯度下降">小批量梯度下降</h2>
<p>大多数用于深度学习的梯度下降算法介于以上两者之间，<strong>使用一个以上而又不是全部的训练样本</strong>。传统上，这些会被称为小批量(mini-batch)或小批量随机(mini-batch
stochastic)方法，现在通常将它们简单地成为随机(stochastic)方法。对于<strong>深度学习</strong>模型而言，人们所说的“<strong>随机梯度下降,
SGD</strong>”，其实就是基于<strong>小批量（mini-batch）的随机梯度下降</strong>。</p>]]></description>
</item>
</channel>
</rss>
