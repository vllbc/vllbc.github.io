<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>面经 - 标签 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/tags/%E9%9D%A2%E7%BB%8F/</link>
        <description>面经 - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 02 Jul 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/tags/%E9%9D%A2%E7%BB%8F/" rel="self" type="application/rss+xml" /><item>
    <title>面经2025</title>
    <link>https://blog.vllbc.top/%E9%9D%A2%E7%BB%8F2025/</link>
    <pubDate>Wed, 02 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E9%9D%A2%E7%BB%8F2025/</guid>
    <description><![CDATA[<h1 id="常见问题总结">常见问题总结</h1>
<h2 id="多轮对话sft样本怎么构造">多轮对话sft样本怎么构造？</h2>
<ul>
<li><p>[大模型微调样本构造
trick]（https://zhuanlan.zhihu.com/p/641562439)</p>
<ul>
<li><p>多轮对话的传统组织方式：将多轮对话拆分为多条独立的训练样本，如
Q1A1/Q2A2/Q3A3 可拆分为 Q1—&gt;A1， Q1A1Q2-&gt;A2， Q1A1Q2A2Q3-&gt;A3
三条样本。</p>]]></description>
</item>
<item>
    <title>北京百分点面经</title>
    <link>https://blog.vllbc.top/%E5%8C%97%E4%BA%AC%E7%99%BE%E5%88%86%E7%82%B9%E9%9D%A2%E7%BB%8F/</link>
    <pubDate>Fri, 10 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%8C%97%E4%BA%AC%E7%99%BE%E5%88%86%E7%82%B9%E9%9D%A2%E7%BB%8F/</guid>
    <description><![CDATA[<p>前几天试着投了简历，没想到有两家约了面试，一个是得物一个是北京百分点，得物面试没有怎么准备，太仓促了，二面挂了，百分点拿到了offer，但决定考研了就没去，记录一下面试的问题。岗位是nlp算法岗。</p>]]></description>
</item>
<item>
    <title>kd树</title>
    <link>https://blog.vllbc.top/kd%E6%A0%91/</link>
    <pubDate>Mon, 21 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/kd%E6%A0%91/</guid>
    <description><![CDATA[<h1 id="kd树">kd树</h1>
<p>knn算法就是用kd树实现的</p>
<h2 id="二分查找">二分查找</h2>
<p>很简单 就不说了</p>
<h2 id="bst">BST</h2>
<p>很简单 就不说了</p>
<h2 id="多维数组">多维数组</h2>
<p>假设数组B为<span class="math inline">\([[6, 2], [6, 3], [3, 5], [5,
0], [1, 2], [4, 9], [8,
1]]\)</span>，有一个元素x，我们要找到数组B中距离x最近的元素，应该如何实现呢？比较直接的想法是用数组B中的每一个元素与x求距离，距离最小的那个元素就是我们要找的元素。假设x
= [1, 1]，那么用数组B中的所有元素与x求距离得到[5.0, 5.4, 4.5, 4.1, 1.0,
8.5, 7.0]，其中距离最小的是1，对应的元素是数组B中的[1, 2]，所以[1,
2]就是我们的查找结果。</p>]]></description>
</item>
<item>
    <title>前缀树</title>
    <link>https://blog.vllbc.top/%E5%89%8D%E7%BC%80%E6%A0%91/</link>
    <pubDate>Wed, 19 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%89%8D%E7%BC%80%E6%A0%91/</guid>
    <description><![CDATA[<h2 id="什么是前缀树">什么是前缀树？</h2>
<p>前缀树是<strong>N叉树的一种特殊形式</strong>。通常来说，一个前缀树是用来存储字符串的。前缀树的每一个节点代表一个字符串（前缀）。每一个节点会有多个子节点，通往不同子节点的路径上有着不同的字符。子节点代表的字符串是由节点本身的原始字符串，以及通往该子节点路径上所有的字符组成的。

在上图示例中，我们在节点中标记的值是该节点对应表示的字符串。例如，我们从根节点开始，选择第二条路径
‘b’，然后选择它的第一个子节点 ‘a’，接下来继续选择子节点
‘d’，我们最终会到达叶节点
“bad”。节点的值是由从根节点开始，与其经过的路径中的字符按顺序形成的。</p>]]></description>
</item>
<item>
    <title>B树</title>
    <link>https://blog.vllbc.top/b%E6%A0%91/</link>
    <pubDate>Sat, 07 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/b%E6%A0%91/</guid>
    <description><![CDATA[<h1 id="b树">B树</h1>
<p>B树就是B-树，以前还以为这是两种树，现在才知道这俩就是一个东西。</p>
<h2 id="基本概念">基本概念</h2>
<ol type="1">
<li>所有的叶子结点都出现在同一层上，并且不带信息(可以看做是外部结点或查找失败的结点，实际上这些结点不存在，指向这些结点的指针为空)。</li>
<li>每个结点包含的关键字个数有上界和下界。用一个被称为
B-树的 <strong>最小度数</strong> 的固定整数 t≥2 来表示这些界
，其中 t 取决于磁盘块的大小：<br />
a.除根结点以外的每个结点必须至少有 t−1 个关键字。因此，除了根结点以外的每个内部结点有
t 个孩子。如果树非空，根结点至少有一个关键字。
<ol start="2" type="a">
<li>每个结点至多包含 2t−1 个关键字。</li>
</ol></li>
<li>一个包含x个关键字的结点有x+1个孩子。</li>
<li>一个结点中所有的关键字升序排列，两个关键字<span
class="math inline">\(k_1\)</span>和<span
class="math inline">\(k_2\)</span>之间的孩子结点的所有关键字key在<span
class="math inline">\((k_1, k_2)\)</span>的范围内。</li>
</ol>
<p>其中最小度数和B树的阶不一样：</p>]]></description>
</item>
</channel>
</rss>
