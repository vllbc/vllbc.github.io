<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Einops - 标签 - vllbc02&#39;s blogs</title>
        <link>http://localhost:1313/tags/einops/</link>
        <description>Einops - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/einops/" rel="self" type="application/rss+xml" /><item>
    <title>einsum</title>
    <link>http://localhost:1313/einsum/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/einsum/</guid>
    <description><![CDATA[einops.einsum calls einsum operations with einops-style named axes indexing, computing tensor products with an arbitrary number of tensors. Unlike typical einsum syntax, here you must pass tensors first, and then the pattern. Also, note that rearrange operations such as "(batch chan) out", or singleton axes (), are not currently supported. 爱因斯坦求和]]></description>
</item>
<item>
    <title>pack and unpack</title>
    <link>http://localhost:1313/pack-and-unpack/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/pack-and-unpack/</guid>
    <description><![CDATA[pack Packs several tensors into one. See einops tutorial for introduction into packing (and how it replaces stack and concatenation).
## unpack &gt;Unpacks a single tensor into several by splitting over a selected axes. See einops tutorial for introduction into packing (and how it replaces stack and concatenation).
image.png ]]></description>
</item>
<item>
    <title>rearrange</title>
    <link>http://localhost:1313/rearrange/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/rearrange/</guid>
    <description><![CDATA[einops.rearrange is a reader-friendly smart element reordering for multidimensional tensors. This operation includes functionality of transpose (axes permutation), reshape (view), squeeze, unsqueeze, stack, concatenate and other operations. 代替reshape，给维度命名。可以用…代表不想动的维度。]]></description>
</item>
<item>
    <title>reduce</title>
    <link>http://localhost:1313/reduce/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/reduce/</guid>
    <description><![CDATA[einops.reduce combines rearrangement and reduction using reader-friendly notation. reduce会使维度减少。]]></description>
</item>
<item>
    <title>repeat</title>
    <link>http://localhost:1313/repeat/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/repeat/</guid>
    <description><![CDATA[einops.repeat allows reordering elements and repeating them in arbitrary combinations. This operation includes functionality of repeat, tile, and broadcast functions. repeat是使维度增加，与reduce相反。 ## 应用 比如说repeat_kv函数就可以用einops]]></description>
</item>
<item>
    <title>asnumpy</title>
    <link>http://localhost:1313/asnumpy/</link>
    <pubDate>Wed, 08 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/asnumpy/</guid>
    <description><![CDATA[ Convert a tensor of an imperative framework (i.e. numpy/cupy/torch/jax/etc.) to numpy.ndarray
image.png ]]></description>
</item>
<item>
    <title>parse_shape</title>
    <link>http://localhost:1313/parse_shape/</link>
    <pubDate>Wed, 08 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/parse_shape/</guid>
    <description><![CDATA[Parse a tensor shape to dictionary mapping axes names to their lengths. # Use underscore to skip the dimension in parsing. &gt;&gt;&gt; x = np.zeros([2, 3, 5, 7]) &gt;&gt;&gt; parse_shape(x, &#39;batch _ h w&#39;) {&#39;batch&#39;: 2, &#39;h&#39;: 5, &#39;w&#39;: 7} # `parse_shape` output can be used to specify axes_lengths for other operations: &gt;&gt;&gt; y = np.zeros([700]) &gt;&gt;&gt; rearrange(y, &#39;(b c h w) -&gt; b c h w&#39;, **parse_shape(x, &#39;b _]]></description>
</item>
</channel>
</rss>
