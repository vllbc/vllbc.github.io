<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>KNN - 标签 - vllbc02&#39;s blogs</title>
        <link>http://localhost:1313/tags/knn/</link>
        <description>KNN - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 25 Jun 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/knn/" rel="self" type="application/rss+xml" /><item>
    <title>KNN</title>
    <link>http://localhost:1313/knn/</link>
    <pubDate>Sat, 25 Jun 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/knn/</guid>
    <description><![CDATA[KNN 参考：https://cuijiahua.com/blog/2017/11/ml_1_knn.html 《统计学习方法》李航（kd树） 简介 k]]></description>
</item>
<item>
    <title>KNN</title>
    <link>http://localhost:1313/knn/</link>
    <pubDate>Tue, 09 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/knn/</guid>
    <description><![CDATA[导入包 import numpy as np import pandas as pd from sklearn.model_selection import train_test_split import plotly.graph_objects as go 导入数据 data = pd.read_csv(&quot;./datasets/Social_Network_Ads.csv&quot;) X = data.iloc[:,[2,3]].values Y = data.iloc[:,4].values # scatter = go.Scatter(x=X[:,0],y=X[:,1],mode=&#39;markers&#39;,marker={&#39;color&#39;:Y}) # fig = go.Figure(scatter) # fig.show() X_train,X_test,Y_train,Y_test = train_test_split(X,Y,test_size=0.25,random_state=0) 标准化 from sklearn.preprocessing import StandardScaler sca = StandardScaler() X_train = sca.fit_transform(X_train) X_test = sca.transform(X_test) 训练模型 from sklearn.neighbors import KNeighborsClassifier model]]></description>
</item>
</channel>
</rss>
