<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>pytorch - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/pytorch/</link>
        <description>pytorch - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 28 Dec 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/pytorch/" rel="self" type="application/rss+xml" /><item>
    <title>regression</title>
    <link>https://vllbc.top/regression/</link>
    <pubDate>Wed, 28 Dec 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/regression/</guid>
    <description><![CDATA[一个线性回归的神经网络模型 import torch import numpy as np import pandas as pd import plotly.graph_objects as go import torch.nn import torch.nn.functional as F from torch.autograd import Variable x = torch.unsqueeze(torch.linspace(-10,10,100),dim=1) y = x*2+10+torch.rand(x.size()) # scatter = go.Scatter(x = torch.squeeze(x),y = torch.squeeze(y),mode = &#39;markers&#39;) # fig = go.Figure(scatter) # fig.show() class Net(torch.nn.Module): def __init__(self): super(Net,self).__init__() self.hidden = torch.nn.Linear(1,10) self.linser = torch.nn.Linear(10,1)]]></description>
</item>
<item>
    <title>神经网络结构可视化</title>
    <link>https://vllbc.top/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E5%8F%AF%E8%A7%86%E5%8C%96/</link>
    <pubDate>Fri, 22 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E7%BB%93%E6%9E%84%E5%8F%AF%E8%A7%86%E5%8C%96/</guid>
    <description><![CDATA[pytorch神经网络结构可视化 参考：https://zhuanlan.zhihu.com/p/220403674 torchviz from torchviz import make_dot make_dot(model(torch.from_numpy(X_train[0].reshape(1, -1)).float()), params=dict(model.named_parameters())) 这是一个简]]></description>
</item>
<item>
    <title>start</title>
    <link>https://vllbc.top/start/</link>
    <pubDate>Fri, 15 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/start/</guid>
    <description><![CDATA[开始！ 用import torch导入pytorch库 不要打成import pytorch哦~ 下面是我的学习记录： import torch#导入模块 x = tor]]></description>
</item>
<item>
    <title>计算图</title>
    <link>https://vllbc.top/%E8%AE%A1%E7%AE%97%E5%9B%BE/</link>
    <pubDate>Mon, 25 Oct 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E8%AE%A1%E7%AE%97%E5%9B%BE/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>detach</title>
    <link>https://vllbc.top/detach/</link>
    <pubDate>Sat, 26 Jun 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/detach/</guid>
    <description><![CDATA[]]></description>
</item>
</channel>
</rss>
