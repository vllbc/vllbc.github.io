<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>三数之和 - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
        <description>三数之和 - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 16 Jul 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/" rel="self" type="application/rss+xml" /><item>
    <title>三数之和</title>
    <link>https://vllbc.top/%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
    <pubDate>Fri, 16 Jul 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
    <description><![CDATA[三数之和 题目： https://leetcode-cn.com/problems/3sum/solution/ 思路： ​ 第一眼看就想到了用双指针，思路有点类似二分查找？ 代码： ​ class Solution: def threeSum(self, nums: List[int]) -&gt; List[List[int]]: n=len(nums) res=[] if(not nums or n&lt;3): return [] nums.sort() res=[] for i in range(n): if(nums[i] &gt; 0): return res if(i &gt; 0]]></description>
</item>
</channel>
</rss>
