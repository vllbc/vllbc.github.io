<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>SVM_sklearn - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/svm_sklearn/</link>
        <description>SVM_sklearn - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 13 Mar 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/svm_sklearn/" rel="self" type="application/rss+xml" /><item>
    <title>SVM_sklearn</title>
    <link>https://vllbc.top/svm_sklearn/</link>
    <pubDate>Sun, 13 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/svm_sklearn/</guid>
    <description><![CDATA[import numpy as np import pandas as pd import matplotlib.pyplot as plt data = pd.read_csv(&#34;./datasets/Social_Network_Ads.csv&#34;) X = data.iloc[:, [2, 3]].values y = data.iloc[:, 4].values from sklearn.model_selection import train_test_split X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0) from sklearn.preprocessing import StandardScaler sc = StandardScaler() X_train = sc.fit_transform(X_train) X_test = sc.fit_transform(X_test) from sklearn.svm import SVC classifier = SVC(kernel = &#39;linear&#39;, random_state = 0) classifier.fit(X_train, y_train) SVC(kernel=&#39;linear&#39;, random_state=0) y_pred = classifier.]]></description>
</item>
</channel>
</rss>
