<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Kd树 - 标签 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/tags/kd%E6%A0%91/</link>
        <description>Kd树 - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 21 Mar 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/tags/kd%E6%A0%91/" rel="self" type="application/rss+xml" /><item>
    <title>kd树</title>
    <link>https://blog.vllbc.top/kd%E6%A0%91/</link>
    <pubDate>Mon, 21 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/kd%E6%A0%91/</guid>
    <description><![CDATA[<h1 id="kd树">kd树</h1>
<p>knn算法就是用kd树实现的</p>
<h2 id="二分查找">二分查找</h2>
<p>很简单 就不说了</p>
<h2 id="bst">BST</h2>
<p>很简单 就不说了</p>
<h2 id="多维数组">多维数组</h2>
<p>假设数组B为<span class="math inline">\([[6, 2], [6, 3], [3, 5], [5,
0], [1, 2], [4, 9], [8,
1]]\)</span>，有一个元素x，我们要找到数组B中距离x最近的元素，应该如何实现呢？比较直接的想法是用数组B中的每一个元素与x求距离，距离最小的那个元素就是我们要找的元素。假设x
= [1, 1]，那么用数组B中的所有元素与x求距离得到[5.0, 5.4, 4.5, 4.1, 1.0,
8.5, 7.0]，其中距离最小的是1，对应的元素是数组B中的[1, 2]，所以[1,
2]就是我们的查找结果。</p>]]></description>
</item>
</channel>
</rss>
