<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Asyncio - 标签 - vllbc02&#39;s blogs</title>
        <link>http://localhost:1313/tags/asyncio/</link>
        <description>Asyncio - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 13 Jun 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/asyncio/" rel="self" type="application/rss+xml" /><item>
    <title>asyncio</title>
    <link>http://localhost:1313/asyncio/</link>
    <pubDate>Sun, 13 Jun 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/asyncio/</guid>
    <description><![CDATA[import threading import time 多线程例子 def spider(): #..... time.sleep(0.02) def main1(): for i in range(100): spider() def main2(): thread_list = [] for i in range(100): thread = threading.Thread(target = spider) thread.start() thread_list.append(thread) for t in thread_list: t.join() if __name__ == &quot;__main__&quot;: start = time.time() main1() end = time.time() print(&quot;time1 :{:.4f}&quot;.format(end-start)) start = time.time() main2() end = time.time() print(&quot;time2 :{:4f}&quot;.format(end-start)) time1 :2.0523 time2 :0.037929 yield def fib(n):]]></description>
</item>
</channel>
</rss>
