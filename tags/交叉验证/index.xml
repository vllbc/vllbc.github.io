<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>交叉验证 - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/</link>
        <description>交叉验证 - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 15 Aug 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/" rel="self" type="application/rss+xml" /><item>
    <title>交叉验证</title>
    <link>https://vllbc.top/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/</link>
    <pubDate>Sun, 15 Aug 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E4%BA%A4%E5%8F%89%E9%AA%8C%E8%AF%81/</guid>
    <description><![CDATA[​ import numpy as np from sklearn.model_selection import train_test_split,cross_val_score from sklearn import datasets from sklearn.neighbors import KNeighborsClassifier data = datasets.load_iris() X = data.data Y = data.target k_scores = [] for k in range(1,31): model = KNeighborsClassifier(n_neighbors=k) #scores = cross_val_score(model,X,Y,cv=10,scoring=&#34;accuracy&#34;) # for classification loss = -cross_val_score(model,X,Y,cv=10,scoring=&#34;neg_mean_squared_error&#34;) # for regression k_scores.append(loss.mean()) plt.plot(range(1,31),k_scores) plt.show()]]></description>
</item>
</channel>
</rss>
