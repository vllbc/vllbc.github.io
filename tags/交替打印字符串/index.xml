<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>交替打印字符串 - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
        <description>交替打印字符串 - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 15 Apr 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/" rel="self" type="application/rss+xml" /><item>
    <title>交替打印字符串</title>
    <link>https://vllbc.top/%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Fri, 15 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E4%BA%A4%E6%9B%BF%E6%89%93%E5%8D%B0%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[交替打印字符串 https://leetcode-cn.com/problems/fizz-buzz-multithreaded/ 一个多线程的题目，类似于交替打印数字那个题目 class FizzBuzz: def __init__(self, n: int): self.n = n from threading import Lock self.fizzlock = Lock() self.buzzlock = Lock() self.fzlock = Lock() self.nofzlock = Lock() self.fizzlock.acquire() self.buzzlock.acquire() self.fzlock.acquire() # printFizz() outputs &#34;fizz&#34; def fizz(self, printFizz: &#39;Callable[[], None]&#39;) -&gt; None: for]]></description>
</item>
</channel>
</rss>
