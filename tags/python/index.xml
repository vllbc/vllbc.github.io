<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>python - 标签 - vllbc02</title>
        <link>https://vllbc.top/tags/python/</link>
        <description>python - 标签 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Wed, 03 Nov 2021 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://vllbc.top/tags/python/" rel="self" type="application/rss+xml" /><item>
    <title>pyplot学习笔记</title>
    <link>https://vllbc.top/pyplot/</link>
    <pubDate>Wed, 03 Nov 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/pyplot/</guid>
    <description><![CDATA[matplotlib.pyplot学习 绘图标记 1 2 3 4 5 6 7 import matplotlib.pyplot as plt import numpy as np ypoints = np.array([1,3,4,5,8,9,6,1,3,4,5,2,4]) plt.plot(ypoints, marker = &#39;o&#39;) # &#34;o&#34;代表实心圆 plt.show() maker可用]]></description>
</item>
<item>
    <title>WTFpython记录</title>
    <link>https://vllbc.top/wtf/</link>
    <pubDate>Thu, 17 Dec 2020 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/wtf/</guid>
    <description><![CDATA[可变与不可变 “-=”操作符会调用__isub__函数，而&quot;-&ldquo;操作符会调用__sub__函数，一般对于可变对象来说“-]]></description>
</item>
<item>
    <title>python协程理解</title>
    <link>https://vllbc.top/asyncio/</link>
    <pubDate>Mon, 23 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/asyncio/</guid>
    <description><![CDATA[1 2 import threading import time 多线程例子 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 def spider(): #..... time.sleep(0.02) def main1(): for i in range(100): spider() def main2(): thread_list = [] for i in range(100): thread = threading.Thread(target = spider) thread.start() thread_list.append(thread) for t in thread_list: t.join() if __name__ ==]]></description>
</item>
<item>
    <title>python小技巧</title>
    <link>https://vllbc.top/skill/</link>
    <pubDate>Sun, 15 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/skill/</guid>
    <description><![CDATA[两个数的交换 1 2 3 4 5 6 7 8 9 10 11 # a = 1 # b = 2 # temp = b # b = a # a = temp # print(a,b) a = 1 b = 2 a,b = b,a print(a,b) 2 1 格式化字符串 1 2 3 4 5 a = 17 name = &#34;wlb&#34; # print(&#39;%s]]></description>
</item>
<item>
    <title>理解python线程</title>
    <link>https://vllbc.top/thread/</link>
    <pubDate>Sat, 14 Nov 2020 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/thread/</guid>
    <description><![CDATA[1 2 import threading import time 简单的创建 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 def run(n): print(&#34;task&#34;, n) time.sleep(1) print(&#39;2s&#39;) time.sleep(1) print(&#39;1s&#39;) time.sleep(1) print(&#39;0s&#39;) time.sleep(1) if __name__ == &#39;__main__&#39;: t1 = threading.Thread(target=run, args=(&#34;t1&#34;,)) t2 = threading.Thread(target=run, args=(&#34;t2&#34;,)) t1.start() t2.start() 通过类创建 1 2 3 4 5 6 7 8 9 10 11 12 13 14]]></description>
</item>
</channel>
</rss>
