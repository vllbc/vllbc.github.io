<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Coding - 标签 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/tags/coding/</link>
        <description>Coding - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 24 Mar 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/tags/coding/" rel="self" type="application/rss+xml" /><item>
    <title>LEGB</title>
    <link>https://blog.vllbc.top/legb/</link>
    <pubDate>Mon, 24 Mar 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/legb/</guid>
    <description><![CDATA[a = &#39;global&#39; def outer(): # def len(in_var): # print(&#39;called my len() function: &#39;, end=&quot;&quot;) # l = 0 # for i in in_var: # l += 1 # return l a = &#39;local&#39; def inner(): nonlocal a a += &#39; variable&#39; inner() print(&#39;a is&#39;, a) # print(len(a)) outer() # print(len(a)) print(&#39;a is&#39;, a) 此时为nonlocal a，会按照]]></description>
</item>
<item>
    <title>debugger</title>
    <link>https://blog.vllbc.top/debugger/</link>
    <pubDate>Sun, 23 Mar 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/debugger/</guid>
    <description><![CDATA[python调试工具，类似于vscode的调试工具，使用命令行进行调试。 使用方法 插入式 import pdb; pdb.set_trace() 或者 breakpoint() 非插入式 python -m pdb [-c command] (-m module | pyfile) [args ...] 常用命令 h 即]]></description>
</item>
<item>
    <title>generate</title>
    <link>https://blog.vllbc.top/generate/</link>
    <pubDate>Sun, 09 Mar 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/generate/</guid>
    <description><![CDATA[理论部分在这：generate相关 ## generate参数 def generate( self, inputs: Optional[torch.Tensor] = None, generation_config: Optional[GenerationConfig] = None, logits_processor: Optional[LogitsProcessorList] = None, stopping_criteria: Optional[StoppingCriteriaList] = None, prefix_allowed_tokens_fn: Optional[Callable[[int, torch.Tensor], List[int]]] = None, synced_gpus: Optional[bool] = None, assistant_model: Optional[&quot;PreTrainedModel&quot;] = None, streamer: Optional[&quot;BaseStreamer&quot;] = None, negative_prompt_ids: Optional[torch.Tensor] = None, negative_prompt_attention_mask:]]></description>
</item>
<item>
    <title>gather和scatter</title>
    <link>https://blog.vllbc.top/gather%E5%92%8Cscatter/</link>
    <pubDate>Fri, 20 Dec 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/gather%E5%92%8Cscatter/</guid>
    <description><![CDATA[gather 参数： input (Tensor) – the source tensor dim (int) – the axis along which to index index (LongTensor) – the indices of elements to gather out (Tensor_,__optional_) – the destination tensor sparse_grad (bool,optional) – If True, gradient w.r.t. input will be a sparse tensor. &gt; gather操作是scatter操作的逆操作]]></description>
</item>
</channel>
</rss>
