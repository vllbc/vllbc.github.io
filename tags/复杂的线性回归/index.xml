<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>复杂的线性回归 - 标签 - vllbc02&#39;s blogs</title>
        <link>http://localhost:1313/tags/%E5%A4%8D%E6%9D%82%E7%9A%84%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link>
        <description>复杂的线性回归 - 标签 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 04 Mar 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/tags/%E5%A4%8D%E6%9D%82%E7%9A%84%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/" rel="self" type="application/rss+xml" /><item>
    <title>复杂的线性回归</title>
    <link>http://localhost:1313/%E5%A4%8D%E6%9D%82%E7%9A%84%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</link>
    <pubDate>Fri, 04 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E5%A4%8D%E6%9D%82%E7%9A%84%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/</guid>
    <description><![CDATA[<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> pandas <span class="im">as</span> pd</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> numpy <span class="im">as</span> np</span></code></pre></div>
<h2 id="读入数据">读入数据</h2>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a>data <span class="op">=</span> pd.read_csv(<span class="st">&quot;./datasets/50_Startups.csv&quot;</span>)</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>data.head()</span></code></pre></div>
<div>
<style scoped>
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }


    .dataframe tbody tr th {
        vertical-align: top;
    }
    
    .dataframe thead th {
        text-align: right;
    }

</style>
<table border="1" class="dataframe">
<thead>
<tr style="text-align: right;">
<th>
</th>
<th>
R&amp;D Spend
</th>
<th>
Administration
</th>
<th>
Marketing Spend
</th>
<th>
State
</th>
<th>
Profit
</th>
</tr>
</thead>
<tbody>
<tr>
<th>
0
</th>
<td>
165349.20
</td>
<td>
136897.80
</td>
<td>
471784.10
</td>
<td>
New York
</td>
<td>
192261.83
</td>
</tr>
<tr>
<th>
1
</th>
<td>
162597.70
</td>
<td>
151377.59
</td>
<td>
443898.53
</td>
<td>
California
</td>
<td>
191792.06
</td>
</tr>
<tr>
<th>
2
</th>
<td>
153441.51
</td>
<td>
101145.55
</td>
<td>
407934.54
</td>
<td>
Florida
</td>
<td>
191050.39
</td>
</tr>
<tr>
<th>
3
</th>
<td>
144372.41
</td>
<td>
118671.85
</td>
<td>
383199.62
</td>
<td>
New York
</td>
<td>
182901.99
</td>
</tr>
<tr>
<th>
4
</th>
<td>
142107.34
</td>
<td>
91391.77
</td>
<td>
366168.42
</td>
<td>
Florida
</td>
<td>
166187.94
</td>
</tr>
</tbody>
</table>
</div>
<h2 id="分开xy">分开xy</h2>
<div class="sourceCode" id="cb3"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>X <span class="op">=</span> data.iloc[:,:<span class="op">-</span><span class="dv">1</span>].values</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a>Y <span class="op">=</span> data.iloc[:,<span class="op">-</span><span class="dv">1</span>].values</span></code></pre></div>
<h2 id="编码">编码</h2>
<div class="sourceCode" id="cb4"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.preprocessing <span class="im">import</span> LabelEncoder,OneHotEncoder</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>labelEncoder <span class="op">=</span> LabelEncoder()</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a>X[:,<span class="dv">3</span>] <span class="op">=</span> labelEncoder.fit_transform(X[:,<span class="dv">3</span>])</span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a>onehotencoder <span class="op">=</span> OneHotEncoder()</span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a>X <span class="op">=</span> onehotencoder.fit_transform(X).toarray()</span></code></pre></div>
<div class="sourceCode" id="cb5"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>X <span class="op">=</span> X[:,<span class="dv">1</span>:]</span></code></pre></div>
<div class="sourceCode" id="cb6"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.model_selection <span class="im">import</span> train_test_split</span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>X_train, X_test, Y_train, Y_test <span class="op">=</span> train_test_split(X, Y, test_size <span class="op">=</span> <span class="fl">0.2</span>, random_state <span class="op">=</span> <span class="dv">0</span>)</span></code></pre></div>
<div class="sourceCode" id="cb7"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb7-1"><a href="#cb7-1" aria-hidden="true" tabindex="-1"></a><span class="im">from</span> sklearn.linear_model <span class="im">import</span> LinearRegression</span>
<span id="cb7-2"><a href="#cb7-2" aria-hidden="true" tabindex="-1"></a>regressor <span class="op">=</span> LinearRegression()</span>
<span id="cb7-3"><a href="#cb7-3" aria-hidden="true" tabindex="-1"></a>regressor.fit(X_train,Y_train)</span></code></pre></div>
<pre><code>LinearRegression()</code></pre>]]></description>
</item>
</channel>
</rss>
