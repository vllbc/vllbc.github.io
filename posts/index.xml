<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/posts/</link>
        <description>所有文章 | vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 28 Jul 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/posts/" rel="self" type="application/rss+xml" /><item>
    <title>shortcode(置顶)</title>
    <link>https://blog.vllbc.top/shortcode%E7%BD%AE%E9%A1%B6/</link>
    <pubDate>Tue, 07 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/shortcode%E7%BD%AE%E9%A1%B6/</guid>
    <description><![CDATA[<p>贴一下可以玩的shortcode。</p>
<h2 id="音乐播放">音乐播放</h2>
<h3 id="播放列表">播放列表</h3>
<p>夏日口袋专辑： <meting-js auto="https://music.163.com/album?id=73470837&amp;uct2=U2FsdGVkX18gTMY/Tb1&#43;2PmOZr2G/Q7mOdM/mANJ8xY=" theme="#448aff"></meting-js></p>
<h3 id="播放单曲">播放单曲</h3>
<p>最爱的一首（我是紬厨）： <meting-js server="netease" type="song" id="1311346841" theme="#448aff"></meting-js></p>
<h2 id="视频播放">视频播放</h2>
<h3 id="bilibili">bilibili</h3>
<p><div class="bilibili"><iframe src="//player.bilibili.com/player.html?bvid=BV1ptXPYREe7&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe></div>
 有多P可以选择集数</p>
<h2 id="admonition">admonition</h2>
<p>类型有：note、abstract、info、tip、success、question、warning、failure、danger、bug、example、quote。
<div class="details admonition tip open">
        <div class="details-summary admonition-title">
            <i class="icon fas fa-lightbulb fa-fw" aria-hidden="true"></i>技巧<i class="details-icon fas fa-angle-right fa-fw" aria-hidden="true"></i>
        </div>
        <div class="details-content">
            <div class="admonition-content">一个 <strong>技巧</strong> 横幅</div>
        </div>
    </div></p>]]></description>
</item>
<item>
    <title>Can Language Models Serve as Text-Based World Simulators?</title>
    <link>https://blog.vllbc.top/can-language-models-serve-as-text-based-world-simulators/</link>
    <pubDate>Mon, 28 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/can-language-models-serve-as-text-based-world-simulators/</guid>
    <description><![CDATA[<p>这篇论文发表于2024年6月，来自亚利桑那大学、微软研究院、艾伦人工智能研究所等顶尖机构，是一项关于大型语言模型（LLM）能力边界探索的严谨、扎实的量化研究。它并没有提出一个全新的、性能超群的模型，而是像一位严谨的实验物理学家，设计了一套精巧的实验装置，来精确测量并回答一个基础且重要的问题：<strong>当前最先进的语言模型，在多大程度上可以取代传统的手工编码，直接作为一个动态世界的“模拟器”？</strong></p>]]></description>
</item>
<item>
    <title>Group Sequence Policy Optimization</title>
    <link>https://blog.vllbc.top/group-sequence-policy-optimization/</link>
    <pubDate>Mon, 28 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/group-sequence-policy-optimization/</guid>
    <description><![CDATA[<p>这篇论文的核心贡献是提出了一种名为 <strong>组序列策略优化 (Group
Sequence Policy Optimization, GSPO)</strong>
的新型强化学习（RL）算法，旨在解决在训练大型语言模型（特别是<strong>混合专家模型,
Mixture-of-Experts,
MoE</strong>）时普遍存在的训练不稳定甚至模型崩溃的痛点。这不仅仅是一次微小的算法改进，而是一次对现有主流RL优化范式的根本性反思与重构，其核心思想是
<strong>“将优化的基本单元与奖励的基本单元对齐”</strong>。</p>]]></description>
</item>
<item>
    <title>dynamic_bsz</title>
    <link>https://blog.vllbc.top/dynamic_bsz/</link>
    <pubDate>Sun, 27 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/dynamic_bsz/</guid>
    <description><![CDATA[
]]></description>
</item>
<item>
    <title>vapo</title>
    <link>https://blog.vllbc.top/vapo/</link>
    <pubDate>Sun, 27 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/vapo/</guid>
    <description><![CDATA[<p>这篇由字节跳动Seed团队在2025年4月发表的论文，直面了当前大模型领域中一个核心且棘手的难题：如何通过强化学习（Reinforcement
Learning,
RL）高效、稳定地提升模型在复杂推理任务上的能力。当前，以<strong>链式思考（Chain-of-Thought,
CoT）</strong>为代表的推理技术是实现通用人工智能（AGI）的关键路径，而如何让模型学会更长、更可靠的推理链，是业界公认的瓶颈。</p>]]></description>
</item>
<item>
    <title>Dataset</title>
    <link>https://blog.vllbc.top/dataset/</link>
    <pubDate>Sat, 26 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/dataset/</guid>
    <description><![CDATA[<p>详细讲解一下verl中的RLHFDataset，它继承自torch的Dataset，需要实现__getitem__来返回数据。</p>
<h2 id="初始化">初始化</h2>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="kw">class</span> RLHFDataset(Dataset):</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a>    <span class="co">&quot;&quot;&quot;</span></span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="co">    Load and preprocess RLHF data from Parquet files.</span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="co">    - Caches files locally.</span></span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a><span class="co">    - Reads into a HuggingFace Dataset and tokenizes prompts.</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a><span class="co">    - Optionally handles images/videos via a ProcessorMixin.</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a><span class="co">    - Filters prompts over a max length.</span></span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a><span class="co">    - Supports resuming from checkpoints.</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a><span class="co">    Args:</span></span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a><span class="co">        data_files (str or list): Path(s) to Parquet file(s).</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="co">        tokenizer (PreTrainedTokenizer): For the tokenization of text to token IDs.</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="co">        config (DictConfig): Options like cache_dir, prompt_key, max_prompt_length, truncation, etc.</span></span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a><span class="co">        processor (ProcessorMixin, optional): Multimodal preprocessor for images/videos.</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a><span class="co">    &quot;&quot;&quot;</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="kw">def</span> <span class="fu">__init__</span>(</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>,</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>        data_files: <span class="bu">str</span> <span class="op">|</span> <span class="bu">list</span>[<span class="bu">str</span>],</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        tokenizer: PreTrainedTokenizer,</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>        config: DictConfig,</span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        processor: Optional[ProcessorMixin] <span class="op">=</span> <span class="va">None</span>,</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    ):</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> <span class="kw">not</span> <span class="bu">isinstance</span>(data_files, <span class="bu">list</span> <span class="op">|</span> ListConfig):</span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>            data_files <span class="op">=</span> [data_files]</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.data_files <span class="op">=</span> copy.deepcopy(data_files)</span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.original_data_files <span class="op">=</span> copy.deepcopy(data_files)  <span class="co"># use for resume</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.tokenizer <span class="op">=</span> tokenizer</span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.processor <span class="op">=</span> processor</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.config <span class="op">=</span> config</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.cache_dir <span class="op">=</span> os.path.expanduser(config.get(<span class="st">&quot;cache_dir&quot;</span>, <span class="st">&quot;~/.cache/verl/rlhf&quot;</span>))</span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.prompt_key <span class="op">=</span> config.get(<span class="st">&quot;prompt_key&quot;</span>, <span class="st">&quot;prompt&quot;</span>)</span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.image_key <span class="op">=</span> config.get(<span class="st">&quot;image_key&quot;</span>, <span class="st">&quot;images&quot;</span>)</span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.video_key <span class="op">=</span> config.get(<span class="st">&quot;video_key&quot;</span>, <span class="st">&quot;videos&quot;</span>)</span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.max_prompt_length <span class="op">=</span> config.get(<span class="st">&quot;max_prompt_length&quot;</span>, <span class="dv">1024</span>)</span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.return_raw_chat <span class="op">=</span> config.get(<span class="st">&quot;return_raw_chat&quot;</span>, <span class="va">False</span>)</span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.return_full_prompt <span class="op">=</span> config.get(<span class="st">&quot;return_full_prompt&quot;</span>, <span class="va">False</span>)</span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.truncation <span class="op">=</span> config.get(<span class="st">&quot;truncation&quot;</span>, <span class="st">&quot;error&quot;</span>)</span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.filter_overlong_prompts <span class="op">=</span> config.get(<span class="st">&quot;filter_overlong_prompts&quot;</span>, <span class="va">True</span>)</span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.num_workers <span class="op">=</span> config.get(<span class="st">&quot;filter_overlong_prompts_workers&quot;</span>, <span class="bu">max</span>(<span class="dv">1</span>, os.cpu_count() <span class="op">//</span> <span class="dv">4</span>))</span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.num_workers <span class="op">=</span> <span class="bu">min</span>(<span class="va">self</span>.num_workers, os.cpu_count())</span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.use_shm <span class="op">=</span> config.get(<span class="st">&quot;use_shm&quot;</span>, <span class="va">False</span>)</span>
<span id="cb1-47"><a href="#cb1-47" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.chat_template_func <span class="op">=</span> config.get(<span class="st">&quot;chat_template_func&quot;</span>, <span class="va">None</span>)</span>
<span id="cb1-48"><a href="#cb1-48" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.need_tools_kwargs <span class="op">=</span> config.get(<span class="st">&quot;need_tools_kwargs&quot;</span>, <span class="va">False</span>)</span>
<span id="cb1-49"><a href="#cb1-49" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.filter_prompts <span class="op">=</span> config.get(<span class="st">&quot;filter_prompts&quot;</span>, <span class="va">True</span>)</span>
<span id="cb1-50"><a href="#cb1-50" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.serialize_dataset <span class="op">=</span> <span class="va">False</span></span>
<span id="cb1-51"><a href="#cb1-51" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>.return_multi_modal_inputs <span class="op">=</span> config.get(<span class="st">&quot;return_multi_modal_inputs&quot;</span>, <span class="va">True</span>)</span>
<span id="cb1-52"><a href="#cb1-52" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb1-53"><a href="#cb1-53" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>._download()</span>
<span id="cb1-54"><a href="#cb1-54" aria-hidden="true" tabindex="-1"></a>        <span class="va">self</span>._read_files_and_tokenize()</span></code></pre></div>
<p> （来自deepwiki）</p>]]></description>
</item>
<item>
    <title>device_mesh</title>
    <link>https://blog.vllbc.top/device_mesh/</link>
    <pubDate>Sat, 26 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/device_mesh/</guid>
    <description><![CDATA[<h2 id="verl中的device_mesh">verl中的device_mesh</h2>
<p>verl中有3个device_mesh，分别是： - 训练用的FSDP mesh（通常是一维） -
推理用的rollout mesh（包含tp维度） - Ulysses序列并行的mesh（dp×sp）</p>]]></description>
</item>
<item>
    <title>Towards Effective Code-Integrated Reasoning</title>
    <link>https://blog.vllbc.top/towards-effective-code-integrated-reasoning/</link>
    <pubDate>Sat, 26 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/towards-effective-code-integrated-reasoning/</guid>
    <description><![CDATA[<p>好的，作为大模型领域的学术专家，我非常乐意为您深入解读这篇名为《Towards
Effective Code-Integrated Reasoning》的论文
(arXiv:2505.24480v1)。这篇论文系统性地探讨了一个在当前大模型研究中至关重要的前沿方向：如何让模型更稳定、更有效地利用外部工具（特别是代码解释器）来完成复杂的推理任务。</p>]]></description>
</item>
<item>
    <title>Routine：A Structural Planning Framework for LLM Agent System in Enterprise</title>
    <link>https://blog.vllbc.top/routinea-structural-planning-framework-for-llm-agent-system-in-enterprise/</link>
    <pubDate>Fri, 25 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/routinea-structural-planning-framework-for-llm-agent-system-in-enterprise/</guid>
    <description><![CDATA[<h3
id="论文深度解读从混沌到有序routine框架如何驯服企业级ai智能体"><strong>论文深度解读：从“混沌”到“有序”，Routine框架如何驯服企业级AI智能体</strong></h3>
<p>当前，以大型语言模型（LLM）为核心的自主智能体（Autonomous
Agents）正以前所未有的速度发展，展现出在数据分析、人机交互等领域的巨大潜力。然而，当我们将这些通用智能体置于规则严密、流程复杂的企业环境中时，往往会遭遇“水土不服”的窘境。论文开篇就指出了这一核心挑战：</p>]]></description>
</item>
<item>
    <title>agent_loop</title>
    <link>https://blog.vllbc.top/agent_loop/</link>
    <pubDate>Thu, 24 Jul 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/agent_loop/</guid>
    <description><![CDATA[<p>Verl 最近实现了 agent loop 功能，也就是多轮工具调用 RL ，弥补了 verl
中 vllm 无法使用多轮 rollout 的不足。整体流程大致如下（来自
https://github.com/zhaochenyang20/Awesome-ML-SYS-Tutorial/blob/main/rlhf/verl/multi-turn/imgs/Multi-Turn_Rollout_Workflow.png）</p>
<figure>

<figcaption aria-hidden="true">image.png</figcaption>
</figure>
<p>在官方实现中（目前在 verl/experimental/agent_loop
目录下），核心代码在
agent_loop.py中，single_turn_agent_loop.py和tool_agent_loop对应两种agent_loop，tool_parser.py定义了hermes工具解析类。所以重点就是在agent_loop.py中，各个类的协作流程如下图：</p>]]></description>
</item>
</channel>
</rss>
