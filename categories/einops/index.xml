<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Einops - 分类 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/categories/einops/</link>
        <description>Einops - 分类 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/categories/einops/" rel="self" type="application/rss+xml" /><item>
    <title>einsum</title>
    <link>https://blog.vllbc.top/einsum/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/einsum/</guid>
    <description><![CDATA[<blockquote>
<p>einops.einsum calls einsum operations with einops-style named axes
indexing, computing tensor products with an arbitrary number of tensors.
Unlike typical einsum syntax, here you must pass tensors first, and then
the pattern.</p>
</blockquote>
<blockquote>
<p>Also, note that rearrange operations such
as <code>"(batch chan) out"</code>, or singleton axes <code>()</code>,
are not currently supported.</p>
</blockquote>
<p>爱因斯坦求和</p>
<p> </p>]]></description>
</item>
<item>
    <title>pack and unpack</title>
    <link>https://blog.vllbc.top/pack-and-unpack/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/pack-and-unpack/</guid>
    <description><![CDATA[<h2 id="pack">pack</h2>
<blockquote>
<p>Packs several tensors into one. See einops tutorial for introduction
into packing (and how it replaces stack and concatenation).</p>
</blockquote>
<p> ## unpack &gt;Unpacks a single tensor into several by
splitting over a selected axes. See einops tutorial for introduction
into packing (and how it replaces stack and concatenation).</p>
<figure>

<figcaption aria-hidden="true">image.png</figcaption>
</figure>]]></description>
</item>
<item>
    <title>rearrange</title>
    <link>https://blog.vllbc.top/rearrange/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/rearrange/</guid>
    <description><![CDATA[<blockquote>
<p>einops.rearrange is a reader-friendly smart element reordering for
multidimensional tensors. This operation includes functionality of
transpose (axes permutation), reshape (view), squeeze, unsqueeze, stack,
concatenate and other operations.</p>
</blockquote>
<p>代替reshape，给维度命名。可以用…代表不想动的维度。  </p>]]></description>
</item>
<item>
    <title>reduce</title>
    <link>https://blog.vllbc.top/reduce/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/reduce/</guid>
    <description><![CDATA[<blockquote>
<p>einops.reduce combines rearrangement and reduction using
reader-friendly notation.</p>
</blockquote>
<p>reduce会使维度减少。  </p>]]></description>
</item>
<item>
    <title>repeat</title>
    <link>https://blog.vllbc.top/repeat/</link>
    <pubDate>Sat, 11 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/repeat/</guid>
    <description><![CDATA[<blockquote>
<p>einops.repeat allows reordering elements and repeating them in
arbitrary combinations. This operation includes functionality of repeat,
tile, and broadcast functions.</p>
</blockquote>
<p>repeat是使维度增加，与reduce相反。   ## 应用
比如说repeat_kv函数就可以用einops.repeat很方便的实现</p>]]></description>
</item>
<item>
    <title>asnumpy</title>
    <link>https://blog.vllbc.top/asnumpy/</link>
    <pubDate>Wed, 08 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/asnumpy/</guid>
    <description><![CDATA[<blockquote>
<p>Convert a tensor of an imperative framework
(i.e. numpy/cupy/torch/jax/etc.) to <code>numpy.ndarray</code></p>
</blockquote>
<figure>

<figcaption aria-hidden="true">image.png</figcaption>
</figure>]]></description>
</item>
<item>
    <title>parse_shape</title>
    <link>https://blog.vllbc.top/parse_shape/</link>
    <pubDate>Wed, 08 Jan 2025 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/parse_shape/</guid>
    <description><![CDATA[<blockquote>
<p>Parse a tensor shape to dictionary mapping axes names to their
lengths.</p>
</blockquote>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="co"># Use underscore to skip the dimension in parsing. </span></span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> x <span class="op">=</span> np.zeros([<span class="dv">2</span>, <span class="dv">3</span>, <span class="dv">5</span>, <span class="dv">7</span>]) <span class="op">&gt;&gt;&gt;</span> parse_shape(x, <span class="st">&#39;batch _ h w&#39;</span>) {<span class="st">&#39;batch&#39;</span>: <span class="dv">2</span>, <span class="st">&#39;h&#39;</span>: <span class="dv">5</span>, <span class="st">&#39;w&#39;</span>: <span class="dv">7</span>} </span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a><span class="co"># `parse_shape` output can be used to specify axes_lengths for other operations: </span></span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> y <span class="op">=</span> np.zeros([<span class="dv">700</span>]) </span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="op">&gt;&gt;&gt;</span> rearrange(y, <span class="st">&#39;(b c h w) -&gt; b c h w&#39;</span>, <span class="op">**</span>parse_shape(x, <span class="st">&#39;b _ h w&#39;</span>)).shape </span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>(<span class="dv">2</span>, <span class="dv">10</span>, <span class="dv">5</span>, <span class="dv">7</span>)</span></code></pre></div>
<p>也就是把维度的维数映射到对应的命名。与数据无关，只看得到维度。</p>]]></description>
</item>
</channel>
</rss>
