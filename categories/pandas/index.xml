<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>pandas - 分类 - vllbc02</title>
        <link>https://example.com/categories/pandas/</link>
        <description>pandas - 分类 - vllbc02</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 08 Nov 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://example.com/categories/pandas/" rel="self" type="application/rss+xml" /><item>
    <title>rot90</title>
    <link>https://example.com/rot90/</link>
    <pubDate>Tue, 08 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/rot90/</guid>
    <description><![CDATA[正为逆时针转，负为顺时针转。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import numpy as np mat = np.array([[1,3,5], [2,4,6], [7,8,9] ]) print mat, &#34;# orignal&#34; mat90 = np.rot90(mat, 1) print mat90, &#34;# rorate 90 &lt;left&gt; anti-clockwise&#34; mat90 = np.rot90(mat, -1) print mat90, &#34;# rorate 90 &lt;right&gt; clockwise&#34; mat180 = np.rot90(mat, 2) print mat180,]]></description>
</item>
<item>
    <title>apply_along_axis</title>
    <link>https://example.com/apply_along_axis/</link>
    <pubDate>Sun, 30 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/apply_along_axis/</guid>
    <description><![CDATA[类似于pandas的apply，就是在某一维上进行定义的函数操作 1 apply_along_axis(func1d, axis, arr, *args, **kwargs) 官网的例子 1 2 3 4 5 6 7 8 9 10 11 def my_func(a): return (a[0] + a[-1]) * 0.5 b = np.array([[1,2,3], [4,5,6], [7,8,9]]) np.apply_along_axis(my_func, 0, b)]]></description>
</item>
<item>
    <title>as_strided</title>
    <link>https://example.com/as_strided/</link>
    <pubDate>Sun, 30 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/as_strided/</guid>
    <description><![CDATA[调用为np.lib.stride_tricks.as_strided() 可以分割一个数组为不同的shape块，有个问题就是什么是stride]]></description>
</item>
<item>
    <title>bincount</title>
    <link>https://example.com/bincount/</link>
    <pubDate>Sun, 30 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/bincount/</guid>
    <description><![CDATA[很简单，就是统计x中的数出现次数，返回结果的最大长度就是x中的最大值+1，idx为对应的数，值为出现的次数，没有出现的为0。 1 2 3 4 x = np.array([7, 6,]]></description>
</item>
<item>
    <title>flip</title>
    <link>https://example.com/flip/</link>
    <pubDate>Sun, 30 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/flip/</guid>
    <description><![CDATA[矩阵的反转，可以按照各个维度很好理解。 例子： 1 2 cs_matrix = np.array([[ 4, 3, 2, 1, 0], [ 8, 7, 6, 5, 1], [11, 10, 9, 6, 2], [13, 12, 10, 7, 3], [14, 13, 11, 8, 4]]) np.flip(cs_matrix, 0) 变成了： 1 np.flip(cs_matrix, 1) 变成了：]]></description>
</item>
<item>
    <title>melt</title>
    <link>https://example.com/melt/</link>
    <pubDate>Sun, 17 Jul 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/melt/</guid>
    <description><![CDATA[pd.melt 用法 直观的看就是将宽数据转化为长数据。转化为variable-value这样的形式。 1 pandas.melt(frame, id_vars=None, value_vars=None, var_name=None, value_name=&#39;value&#39;, col_level=None) 参数解释： frame:要处理的数据集。 i]]></description>
</item>
<item>
    <title>learn_four</title>
    <link>https://example.com/learn_four/</link>
    <pubDate>Mon, 17 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/learn_four/</guid>
    <description><![CDATA[pandas补充学习 推荐网站：http://joyfulpandas.datawhale.club/Content/Preface.html]]></description>
</item>
<item>
    <title>learn_three</title>
    <link>https://example.com/learn_three/</link>
    <pubDate>Thu, 23 Dec 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/learn_three/</guid>
    <description><![CDATA[记录一下实训学到的内容 布尔索引 布尔索引不能使用and or not ，只能用&amp; | ~ 因为只能用位操作符 花哨索引 1 2 arr = np.arange(32).reshape((8, 4)) arr 1 2 3 4 5 6 7 8 array([[ 0, 1,]]></description>
</item>
<item>
    <title>task2</title>
    <link>https://example.com/task2/</link>
    <pubDate>Mon, 01 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/task2/</guid>
    <description><![CDATA[age workclass fnlwgt education education-num marital-status occupation relationship race sex capital-gain capital-loss hours-per-week native-country salary 0 39 State-gov 77516 Bachelors 13 Never-married Adm-clerical Not-in-family White Male 2174 0 40 United-States &lt;=50K 1 50 Self-emp-not-inc 83311 Bachelors 13 Married-civ-spouse Exec-managerial Husband White Male 0 0 13 United-States &lt;=50K 2 38 Private 215646 HS-grad 9 Divorced Handlers-cleaners Not-in-family White Male 0 0 40 United-States &lt;=50K 3 53 Private 234721 11th 7 Married-civ-spouse]]></description>
</item>
<item>
    <title>task1</title>
    <link>https://example.com/task1/</link>
    <pubDate>Wed, 27 Jan 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://example.com/task1/</guid>
    <description><![CDATA[pandas实践1 在读取数据之前，我修改了表格里面的表头，以便程序的编写。 先从 excel 读取数据,然后看看 shape 了解行数列数,然后调用 info 方法， 看看有没有]]></description>
</item>
</channel>
</rss>
