<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Mathematical Modeling - 分类 - vllbc02&#39;s blogs</title>
        <link>http://localhost:1313/categories/mathematical-modeling/</link>
        <description>Mathematical Modeling - 分类 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 18 Nov 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:1313/categories/mathematical-modeling/" rel="self" type="application/rss+xml" /><item>
    <title>优劣解距离法Topsis</title>
    <link>http://localhost:1313/%E4%BC%98%E5%8A%A3%E8%A7%A3%E8%B7%9D%E7%A6%BB%E6%B3%95topsis/</link>
    <pubDate>Fri, 18 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E4%BC%98%E5%8A%A3%E8%A7%A3%E8%B7%9D%E7%A6%BB%E6%B3%95topsis/</guid>
    <description><![CDATA[<h1 id="优劣解距离法topsis">优劣解距离法Topsis</h1>
<h2 id="步骤">步骤</h2>
<h3 id="原始矩阵正向化">原始矩阵正向化</h3>
<p>有四种指标：</p>
<ul>
<li>极大型</li>
<li>极小型</li>
<li>中间型</li>
<li>区间型</li>
</ul>
<p>正向化就是将其它的指标转化为极大型指标 极小型 -&gt; 极大型： 中间型
-&gt; 极大型： 区间型 -&gt; 极大型： ### 正向化矩阵标准化</p>]]></description>
</item>
<item>
    <title>相关系数</title>
    <link>http://localhost:1313/%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/</link>
    <pubDate>Fri, 02 Sep 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/</guid>
    <description><![CDATA[<h1 id="皮尔逊相关系数">皮尔逊相关系数</h1>
<h2 id="假设检验">假设检验</h2>
<p>步骤与概率论中假设检验的步骤一样。主要是统计量的构造</p>
<p><span class="math display">\[
t = r\sqrt{\frac{n-2}{1-r^2}}
\]</span> t为服从自由度为n-2的t分布</p>
<h2 id="假设检验的条件">假设检验的条件</h2>
<ol type="1">
<li>实验数据通常假设是成对的来自于正态分布的总体</li>
<li>实验数据之间差距不能太大</li>
<li>每组样本之间是独立抽样的。</li>
</ol>
<h2 id="对数据进行正态分布检验">对数据进行正态分布检验</h2>
<h3 id="jb检验">JB检验</h3>
<h1 id="斯皮尔曼相关系数">斯皮尔曼相关系数</h1>
<h2 id="公式">公式</h2>
<p><span class="math display">\[
r_s = 1 - \frac{6\sum_{i=1}^nd_i^2}{n(n^2-1)}
\]</span></p>]]></description>
</item>
<item>
    <title>灰色关联分析</title>
    <link>http://localhost:1313/%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</link>
    <pubDate>Tue, 09 Aug 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E7%81%B0%E8%89%B2%E5%85%B3%E8%81%94%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[<h1 id="灰色关联分析进行系统分析">灰色关联分析进行系统分析</h1>
<p>灰色关联分析主要用于数据量较小，即样本较少的情况，别的情况使用回归分析等常规方法就可以。</p>
<h2 id="步骤">步骤</h2>
<p>1.画统计图 画图后配上简单的分析。 2.确定分析数列
(1)母序列（又叫参考数列、母指标）：能反映系统行为特征的数据序列。类似于因变量Y
(2)子序列（又叫比较数列、子指标）：影响系统行为的因素组成的数据序列。类似于自变量X
3.对变量进行预处理（去量纲、缩小变量范围简化计算）
对母序列、子序列中的每个指标进行预处理，先求出每个指标的均值，然后用每个元素除以这个均值
4.计算子序列中各个指标与母序列的关联系数 记<span
class="math inline">\(a=min min\mid x_0(k) - x_i(k)
\mid\)</span>为两极最小差 <span class="math inline">\(b=maxmax\mid
x_0(k) - x_i(k) \mid\)</span>为两极最大差 定义</p>]]></description>
</item>
<item>
    <title>Hermite</title>
    <link>http://localhost:1313/hermite/</link>
    <pubDate>Sun, 15 May 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/hermite/</guid>
    <description><![CDATA[<h1 id="hermite插值法">Hermite插值法</h1>
<h2 id="公式">公式</h2>
<p>

</p>
<h2 id="代码">代码</h2>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> matplotlib.pyplot <span class="im">as</span> plt</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> numpy <span class="im">as</span> np</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="co">#计算基函数的导数值</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> dl(i, xi):</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    result <span class="op">=</span> <span class="fl">0.0</span></span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> j <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">0</span>,<span class="bu">len</span>(xi)):</span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> j<span class="op">!=</span>i:</span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>            result <span class="op">+=</span> <span class="dv">1</span><span class="op">/</span>(xi[i]<span class="op">-</span>xi[j])</span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>    result <span class="op">*=</span> <span class="dv">2</span></span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> result</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a><span class="co">#计算基函数值</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> l(i, xi, x):</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>    deno <span class="op">=</span> <span class="fl">1.0</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>    nu <span class="op">=</span> <span class="fl">1.0</span></span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>    <span class="cf">for</span> j <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">0</span>, <span class="bu">len</span>(xi)):</span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> j<span class="op">!=</span> i:</span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>            deno <span class="op">*=</span> (xi[i]<span class="op">-</span>xi[j])</span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>            nu <span class="op">*=</span> (x<span class="op">-</span>xi[j])</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> nu<span class="op">/</span>deno</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a><span class="co">#Hermite插值函数</span></span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> get_Hermite(xi, yi, dyi):</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>    <span class="kw">def</span> he(x):</span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a>        result <span class="op">=</span> <span class="fl">0.0</span></span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">0</span>, <span class="bu">len</span>(xi)):</span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>            result <span class="op">+=</span> (yi[i]<span class="op">+</span>(x<span class="op">-</span>xi[i])<span class="op">*</span>(dyi[i]<span class="op">-</span><span class="dv">2</span><span class="op">*</span>yi[i]<span class="op">*</span>dl(i, xi))) <span class="op">*</span> ((l(i,xi,x))<span class="op">**</span><span class="dv">2</span>)</span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> result</span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> he</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> math</span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a>sr_x <span class="op">=</span> [(i <span class="op">*</span> math.pi) <span class="op">+</span> (math.pi <span class="op">/</span> <span class="dv">2</span>) <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="op">-</span><span class="dv">3</span>, <span class="dv">3</span>)]</span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>sr_fx <span class="op">=</span> [math.sin(i) <span class="cf">for</span> i <span class="kw">in</span> sr_x]</span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>deriv <span class="op">=</span> [<span class="dv">0</span> <span class="cf">for</span> i <span class="kw">in</span> sr_x]                           <span class="co"># 导数都为 0</span></span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>Hx <span class="op">=</span> get_Hermite(sr_x, sr_fx, deriv)  <span class="co"># 获得插值函数</span></span>
<span id="cb1-39"><a href="#cb1-39" aria-hidden="true" tabindex="-1"></a>tmp_x <span class="op">=</span> [i <span class="op">*</span> <span class="fl">0.1</span> <span class="op">*</span> math.pi <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="op">-</span><span class="dv">20</span>, <span class="dv">20</span>)] <span class="co"># 测试用例</span></span>
<span id="cb1-40"><a href="#cb1-40" aria-hidden="true" tabindex="-1"></a>tmp_y <span class="op">=</span> [Hx(i) <span class="cf">for</span> i <span class="kw">in</span> tmp_x]                      <span class="co"># 根据插值函数获得测试用例的纵坐标</span></span>
<span id="cb1-41"><a href="#cb1-41" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-42"><a href="#cb1-42" aria-hidden="true" tabindex="-1"></a><span class="co">#画图</span></span>
<span id="cb1-43"><a href="#cb1-43" aria-hidden="true" tabindex="-1"></a>plt.plot(sr_x, sr_fx, <span class="st">&#39;ro&#39;</span>)</span>
<span id="cb1-44"><a href="#cb1-44" aria-hidden="true" tabindex="-1"></a>plt.plot(tmp_x, tmp_y, <span class="st">&#39;b-&#39;</span>)</span>
<span id="cb1-45"><a href="#cb1-45" aria-hidden="true" tabindex="-1"></a>plt.title(<span class="st">&#39;Hermite Interpolation&#39;</span>)</span>
<span id="cb1-46"><a href="#cb1-46" aria-hidden="true" tabindex="-1"></a>plt.show()</span></code></pre></div>]]></description>
</item>
<item>
    <title>分段线性插值</title>
    <link>http://localhost:1313/%E5%88%86%E6%AE%B5%E7%BA%BF%E6%80%A7%E6%8F%92%E5%80%BC/</link>
    <pubDate>Tue, 10 May 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E5%88%86%E6%AE%B5%E7%BA%BF%E6%80%A7%E6%8F%92%E5%80%BC/</guid>
    <description><![CDATA[<h1 id="分段线性插值">分段线性插值</h1>
<p>利用线性函数作插值 每一段的线性函数：</p>
<p><span class="math display">\[
F1 =
\frac{x-x_{i+1}}{x_i-x_{i+1}}f(x_i)+\frac{x-x_i}{x_{i+1}-x_i}f(x_{i+1})
\]</span></p>
<h2 id="代码">代码</h2>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> numpy <span class="im">as</span> np</span>
<span id="cb1-2"><a href="#cb1-2" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> matplotlib.pyplot <span class="im">as</span> plt</span>
<span id="cb1-3"><a href="#cb1-3" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-4"><a href="#cb1-4" aria-hidden="true" tabindex="-1"></a><span class="co">#分段线性插值闭包</span></span>
<span id="cb1-5"><a href="#cb1-5" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> get_line(xn, yn):</span>
<span id="cb1-6"><a href="#cb1-6" aria-hidden="true" tabindex="-1"></a>    <span class="kw">def</span> line(x):</span>
<span id="cb1-7"><a href="#cb1-7" aria-hidden="true" tabindex="-1"></a>        index <span class="op">=</span> <span class="op">-</span><span class="dv">1</span></span>
<span id="cb1-8"><a href="#cb1-8" aria-hidden="true" tabindex="-1"></a>         </span>
<span id="cb1-9"><a href="#cb1-9" aria-hidden="true" tabindex="-1"></a>        <span class="co">#找出x所在的区间</span></span>
<span id="cb1-10"><a href="#cb1-10" aria-hidden="true" tabindex="-1"></a>        <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="dv">1</span>, <span class="bu">len</span>(xn)):</span>
<span id="cb1-11"><a href="#cb1-11" aria-hidden="true" tabindex="-1"></a>            <span class="cf">if</span> x <span class="op">&lt;=</span> xn[i]:</span>
<span id="cb1-12"><a href="#cb1-12" aria-hidden="true" tabindex="-1"></a>                index <span class="op">=</span> i<span class="op">-</span><span class="dv">1</span></span>
<span id="cb1-13"><a href="#cb1-13" aria-hidden="true" tabindex="-1"></a>                <span class="cf">break</span></span>
<span id="cb1-14"><a href="#cb1-14" aria-hidden="true" tabindex="-1"></a>            <span class="cf">else</span>:</span>
<span id="cb1-15"><a href="#cb1-15" aria-hidden="true" tabindex="-1"></a>                i <span class="op">+=</span> <span class="dv">1</span></span>
<span id="cb1-16"><a href="#cb1-16" aria-hidden="true" tabindex="-1"></a>         </span>
<span id="cb1-17"><a href="#cb1-17" aria-hidden="true" tabindex="-1"></a>        <span class="cf">if</span> index <span class="op">==</span> <span class="op">-</span><span class="dv">1</span>:</span>
<span id="cb1-18"><a href="#cb1-18" aria-hidden="true" tabindex="-1"></a>            <span class="cf">return</span> <span class="op">-</span><span class="dv">100</span></span>
<span id="cb1-19"><a href="#cb1-19" aria-hidden="true" tabindex="-1"></a>         </span>
<span id="cb1-20"><a href="#cb1-20" aria-hidden="true" tabindex="-1"></a>        <span class="co">#插值</span></span>
<span id="cb1-21"><a href="#cb1-21" aria-hidden="true" tabindex="-1"></a>        result <span class="op">=</span> (x<span class="op">-</span>xn[index<span class="op">+</span><span class="dv">1</span>])<span class="op">*</span>yn[index]<span class="op">/</span><span class="bu">float</span>((xn[index]<span class="op">-</span>xn[index<span class="op">+</span><span class="dv">1</span>])) <span class="op">+</span> (x<span class="op">-</span>xn[index])<span class="op">*</span>yn[index<span class="op">+</span><span class="dv">1</span>]<span class="op">/</span><span class="bu">float</span>((xn[index<span class="op">+</span><span class="dv">1</span>]<span class="op">-</span>xn[index]))</span>
<span id="cb1-22"><a href="#cb1-22" aria-hidden="true" tabindex="-1"></a>         </span>
<span id="cb1-23"><a href="#cb1-23" aria-hidden="true" tabindex="-1"></a>        <span class="cf">return</span> result</span>
<span id="cb1-24"><a href="#cb1-24" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> line</span>
<span id="cb1-25"><a href="#cb1-25" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-26"><a href="#cb1-26" aria-hidden="true" tabindex="-1"></a>xn <span class="op">=</span> [i <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="op">-</span><span class="dv">50</span>,<span class="dv">50</span>,<span class="dv">10</span>)]</span>
<span id="cb1-27"><a href="#cb1-27" aria-hidden="true" tabindex="-1"></a>yn <span class="op">=</span> [i<span class="op">**</span><span class="dv">2</span> <span class="cf">for</span> i <span class="kw">in</span> xn]</span>
<span id="cb1-28"><a href="#cb1-28" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-29"><a href="#cb1-29" aria-hidden="true" tabindex="-1"></a><span class="co">#分段线性插值函数</span></span>
<span id="cb1-30"><a href="#cb1-30" aria-hidden="true" tabindex="-1"></a>lin <span class="op">=</span> get_line(xn, yn)</span>
<span id="cb1-31"><a href="#cb1-31" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-32"><a href="#cb1-32" aria-hidden="true" tabindex="-1"></a>x <span class="op">=</span> [i <span class="cf">for</span> i <span class="kw">in</span> <span class="bu">range</span>(<span class="op">-</span><span class="dv">50</span>, <span class="dv">40</span>)]</span>
<span id="cb1-33"><a href="#cb1-33" aria-hidden="true" tabindex="-1"></a>y <span class="op">=</span> [lin(i) <span class="cf">for</span> i <span class="kw">in</span> x]</span>
<span id="cb1-34"><a href="#cb1-34" aria-hidden="true" tabindex="-1"></a> </span>
<span id="cb1-35"><a href="#cb1-35" aria-hidden="true" tabindex="-1"></a><span class="co">#画图</span></span>
<span id="cb1-36"><a href="#cb1-36" aria-hidden="true" tabindex="-1"></a>plt.plot(xn, yn, <span class="st">&#39;ro&#39;</span>)</span>
<span id="cb1-37"><a href="#cb1-37" aria-hidden="true" tabindex="-1"></a>plt.plot(x, y, <span class="st">&#39;b-&#39;</span>)</span>
<span id="cb1-38"><a href="#cb1-38" aria-hidden="true" tabindex="-1"></a>plt.show()</span></code></pre></div>]]></description>
</item>
<item>
    <title>层次分析法</title>
    <link>http://localhost:1313/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95/</link>
    <pubDate>Sat, 30 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E5%B1%82%E6%AC%A1%E5%88%86%E6%9E%90%E6%B3%95/</guid>
    <description><![CDATA[<h1 id="层次分析法">层次分析法</h1>
<h2 id="一基本步骤">一、基本步骤</h2>
<p>1、建立层次结构模型。在深入分析实际问题的基础上，将有关的各个因素按照不同属性自上而下地分解成若干层次，同一层的诸因素从属于上一层的因素或对上层因素有影响，同时又支配下一层的因素或受到下层因素的作用。最上层为目标层，通常只有1个因素，最下层通常为方案或对象层，中间可以有一个或几个层次，通常为准则或指标层。当准则过多时(譬如多于9个)应进一步分解出子准则层。</p>]]></description>
</item>
<item>
    <title>牛顿插值</title>
    <link>http://localhost:1313/%E7%89%9B%E9%A1%BF%E6%8F%92%E5%80%BC/</link>
    <pubDate>Sun, 13 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E7%89%9B%E9%A1%BF%E6%8F%92%E5%80%BC/</guid>
    <description><![CDATA[<h1 id="牛顿插值">牛顿插值</h1>
<h2 id="差商">差商</h2>
<p>定义：设 <span class="math inline">\(f(x)\)</span> 在互异节点<span
class="math inline">\(x_i\)</span>处的函数值为<span
class="math inline">\(f_i,  i=0,1,\dots,n\)</span>，称<span
class="math inline">\(f[x_i,x_j]=\frac{f_i-f_j}{x_i-x_j}\)</span>为<span
class="math inline">\(f(x)\)</span>关于节点<span
class="math inline">\(x_i,x_j\)</span>的一阶差商，<span
class="math inline">\(f[x_i,x_j,x_k]=\frac{f[x_i,x_j]-f[x_j,x_k]}{x_i-x_k}\)</span>为<span
class="math inline">\(f(x)\)</span>关于<span
class="math inline">\(x_i,x_j,x_k\)</span>的二阶差商，以此类推k阶差商：</p>]]></description>
</item>
<item>
    <title>灰色预测模型</title>
    <link>http://localhost:1313/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/</link>
    <pubDate>Wed, 23 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B/</guid>
    <description><![CDATA[<h1 id="灰色预测模型">灰色预测模型</h1>
<h2 id="介绍">介绍</h2>
<p>灰色预测模型（Gray Forecast
Model）是通过少量的、不完全的信息，建立数学模型并做出预测的一种预测方法。是处理小样本（4个就可以）预测问题的有效工具，而对于小样本预测问题回归和神经网络的效果都不太理想。</p>]]></description>
</item>
<item>
    <title>回归分析</title>
    <link>http://localhost:1313/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</link>
    <pubDate>Sun, 30 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[<h1 id="内生性和外生性">内生性和外生性</h1>
<p>假设模型为： <span
class="math inline">\(y=\beta_0+\beta_1x_1+\beta_2x_2+\cdots
+\beta_kx_k+\mu_i\)</span></p>
<h2 id="内生性定义">内生性定义</h2>
<p><span class="math display">\[
cov(x_j,\mu_i)\neq0, j\neq i
\]</span></p>
<h2 id="内生性的坏处">内生性的坏处</h2>
<p>影响回归系数</p>
<h2 id="解释">解释</h2>
<p><span
class="math inline">\(\mu_i\)</span>为无法观测的且满足一定关系的扰动项
如果满足误差项 <span
class="math inline">\(\mu_i\)</span>与所有的自变量<span
class="math inline">\(x\)</span>均不相关，则称该回归模型具有外生性
（如果相关，则存在内生性，内生性会导致回归系数估计的不准确，不满足无偏性与一致性）
那么，<span class="math inline">\(\mu_i\)</span> 包括什么？
包含了所有与y相关，但未添加到回归模型中的变量。
如果这些变量和我们已经添加的自变量相关，则存在内生性。 无内生性（no
endogeneity）要求所有解释变量均与扰动项不相关。
这个假定通常太强，因为解释变量一般很多（比如，5‐15个解释变量），且需要保证它们全部外生。</p>]]></description>
</item>
<item>
    <title>样条插值</title>
    <link>http://localhost:1313/%E6%A0%B7%E6%9D%A1%E6%8F%92%E5%80%BC/</link>
    <pubDate>Sun, 30 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>http://localhost:1313/%E6%A0%B7%E6%9D%A1%E6%8F%92%E5%80%BC/</guid>
    <description><![CDATA[
]]></description>
</item>
</channel>
</rss>
