<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>算法题 - 分类 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/categories/%E7%AE%97%E6%B3%95%E9%A2%98/</link>
        <description>算法题 - 分类 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vllbc02@163.com (vllbc)</managingEditor>
            <webMaster>vllbc02@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 29 Mar 2024 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/categories/%E7%AE%97%E6%B3%95%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>课程表（拓扑排序）</title>
    <link>https://blog.vllbc.top/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Fri, 29 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[Problem: 思路 注意拓扑排序最好是邻接表（哈系表实现），并用队列处理后续入度为0的点 解题方法 描述你的解题方法 复杂度 时间复杂度: 添加时间复杂度, 示例： \(O(n)\)]]></description>
</item>
<item>
    <title>跳跃游戏</title>
    <link>https://blog.vllbc.top/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
    <pubDate>Mon, 18 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
    <description><![CDATA[跳跃游戏 Problem: 思路 讲述看到这一题的思路 解题方法 描述你的解题方法 复杂度 时间复杂度: 添加时间复杂度, 示例： \(O(n)\) 空间复杂度: 添加空间复杂度, 示例： \(O(n)\) Code ```Python3]]></description>
</item>
<item>
    <title>缺失的第一个正数</title>
    <link>https://blog.vllbc.top/%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</link>
    <pubDate>Sat, 16 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</guid>
    <description><![CDATA[41. 缺失的第一个正数 - 力扣（LeetCode） 空间复杂度o(n)很好想，但o(1)不好想，还是个408考研真题 注意O(n) == O(2n)，即相较]]></description>
</item>
<item>
    <title>和为K的子数组</title>
    <link>https://blog.vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
    <pubDate>Thu, 14 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
    <description><![CDATA[题目地址 # 思路 通过前缀和+哈希表，并有简单的数学变换。前缀和即 \(y[i]=y[i-1]+x[i]\) 类比于accumlate函数，注意前缀和思想也可以应用为“前缀积、后缀和、后]]></description>
</item>
<item>
    <title>和为K的子数组</title>
    <link>https://blog.vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84-1/</link>
    <pubDate>Thu, 14 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84-1/</guid>
    <description><![CDATA[题目地址 # 思路 通过前缀和+哈希表，并有简单的数学变换。前缀和即 \(y[i]=y[i-1]+x[i]\) 类比于accumlate函数，注意前缀和思想也可以应用为“前缀积、后缀和、后]]></description>
</item>
<item>
    <title>并查集</title>
    <link>https://blog.vllbc.top/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link>
    <pubDate>Wed, 13 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid>
    <description><![CDATA[def find(x): if (p[x] != x): p[x] = find(p[x]) return p[x] 上面是y总的模板，实现了路径压缩。]]></description>
</item>
<item>
    <title>验证外星语词典</title>
    <link>https://blog.vllbc.top/%E9%AA%8C%E8%AF%81%E5%A4%96%E6%98%9F%E8%AF%AD%E8%AF%8D%E5%85%B8/</link>
    <pubDate>Mon, 08 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E9%AA%8C%E8%AF%81%E5%A4%96%E6%98%9F%E8%AF%AD%E8%AF%8D%E5%85%B8/</guid>
    <description><![CDATA[leetcode地址：953. 验证外星语词典 - 力扣（LeetCode） 简单方法 python列表之间也可以进行比较（太灵活了），比如[1, 2, 3]]]></description>
</item>
<item>
    <title>把数字翻译成字符串</title>
    <link>https://blog.vllbc.top/%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <pubDate>Thu, 17 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
    <description><![CDATA[把数字翻译成字符串 题目： https://leetcode-cn.com/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/ 思路： dp思想，不用管是什么字符，定义dp[i]为长度为i时 有多少个方法 代码: class Solution: def translateNum(self, num: int) -&gt; int: s = str(num) if len(s) &lt; 2: return 1 dp]]></description>
</item>
<item>
    <title>字符串转换整数 (atoi)</title>
    <link>https://blog.vllbc.top/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</link>
    <pubDate>Wed, 26 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%95%B4%E6%95%B0-atoi/</guid>
    <description><![CDATA[字符串转换整数 (atoi) https://leetcode-cn.com/problems/string-to-integer-atoi/ #重点是正则表达式 class Solution: def myAtoi(s: str): import re ss = re.findall(&quot;^[\+\-]?\d+&quot;,s.strip()) res = int(*ss) if res &gt; (231-1): res = (231-1) if res &lt; -231: res = -231 return res WA了四次才整出来，太菜了，以为很简单，没有认]]></description>
</item>
<item>
    <title>分发饼干</title>
    <link>https://blog.vllbc.top/%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</link>
    <pubDate>Mon, 03 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/%E5%88%86%E5%8F%91%E9%A5%BC%E5%B9%B2/</guid>
    <description><![CDATA[分发饼干 https://leetcode-cn.com/problems/assign-cookies/ class Solution: def findContentChildren(g, s) -&gt; int: g = sorted(g) s = sorted(s) n = 0 for i in range(len(s)): if g[n] &lt;= s[i]: n += 1 if n == len(g): return n return n 贪心算法的题目，考虑局部最优]]></description>
</item>
</channel>
</rss>
