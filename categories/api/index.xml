<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Api - 分类 - vllbc02&#39;s blogs</title>
        <link>https://blog.vllbc.top/categories/api/</link>
        <description>Api - 分类 - vllbc02&#39;s blogs</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 29 Nov 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://blog.vllbc.top/categories/api/" rel="self" type="application/rss+xml" /><item>
    <title>bincount</title>
    <link>https://blog.vllbc.top/bincount/</link>
    <pubDate>Tue, 29 Nov 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/bincount/</guid>
    <description><![CDATA[<p></p>
<p>很简单，就是统计x中的数出现次数，返回结果的最大长度就是x中的最大值+1，idx为对应的数，值为出现的次数，没有出现的为0。</p>
<pre class="python3"><code>x = np.array([7, 6, 2, 1, 4]) 
# 索引0出现了0次，索引1出现了1次......索引5出现了0次...... 
np.bincount(x) 
#输出结果为：array([0, 1, 1, 0, 1, 0, 1, 1])</code></pre>
<p>weight这个参数也很好理解，x会被它加权，也就是说，如果值n发现在位置i，那么out[n]
+= weight[i]而不是out[n] += 1。所以weight必须和x等长。</p>]]></description>
</item>
<item>
    <title>rot90</title>
    <link>https://blog.vllbc.top/rot90/</link>
    <pubDate>Sat, 12 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/rot90/</guid>
    <description><![CDATA[<p>正为逆时针转，负为顺时针转。</p>
<pre class="python3"><code>import numpy as np
mat = np.array([[1,3,5],
                [2,4,6],
                [7,8,9]
                ])
print mat, &quot;# orignal&quot;
mat90 = np.rot90(mat, 1)
print mat90, &quot;# rorate 90 &lt;left&gt; anti-clockwise&quot;
mat90 = np.rot90(mat, -1)
print mat90, &quot;# rorate 90 &lt;right&gt; clockwise&quot;
mat180 = np.rot90(mat, 2)
print mat180, &quot;# rorate 180 &lt;left&gt; anti-clockwise&quot;
mat270 = np.rot90(mat, 3)
print mat270, &quot;# rorate 270 &lt;left&gt; anti-clockwise&quot;
</code></pre>
<p>直接复制的代码，python2，能看懂就行。</p>]]></description>
</item>
<item>
    <title>melt</title>
    <link>https://blog.vllbc.top/melt/</link>
    <pubDate>Wed, 12 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/melt/</guid>
    <description><![CDATA[<h1 id="pd.melt">pd.melt</h1>
<h2 id="用法">用法</h2>
<p>直观的看就是将宽数据转化为长数据。转化为variable-value这样的形式。</p>
<div class="sourceCode" id="cb1"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb1-1"><a href="#cb1-1" aria-hidden="true" tabindex="-1"></a>pandas.melt(frame, id_vars<span class="op">=</span><span class="va">None</span>, value_vars<span class="op">=</span><span class="va">None</span>, var_name<span class="op">=</span><span class="va">None</span>, value_name<span class="op">=</span><span class="st">&#39;value&#39;</span>, col_level<span class="op">=</span><span class="va">None</span>)</span></code></pre></div>
<p>参数解释：</p>
<ul>
<li>frame:要处理的数据集。</li>
<li>id_vars:不需要被转换的列名。</li>
<li>value_vars:需要转换的列名，如果剩下的列全部都要转换，就不用写了。</li>
<li>var_name和value_name是自定义设置对应的列名。</li>
<li>col_level :如果列是MultiIndex，则使用此级别。 ## 实例</li>
</ul>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="im">import</span> pandas <span class="im">as</span> pd</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>df <span class="op">=</span> pd.DataFrame({<span class="st">&#39;A&#39;</span>: {<span class="dv">0</span>: <span class="st">&#39;a&#39;</span>, <span class="dv">1</span>: <span class="st">&#39;b&#39;</span>, <span class="dv">2</span>: <span class="st">&#39;c&#39;</span>},</span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>                   <span class="st">&#39;B&#39;</span>: {<span class="dv">0</span>: <span class="dv">1</span>, <span class="dv">1</span>: <span class="dv">3</span>, <span class="dv">2</span>: <span class="dv">5</span>},</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a>                   <span class="st">&#39;C&#39;</span>: {<span class="dv">0</span>: <span class="dv">2</span>, <span class="dv">1</span>: <span class="dv">4</span>, <span class="dv">2</span>: <span class="dv">6</span>}</span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>                   })</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a>df</span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a><span class="co">   A  B  C</span></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="co">0  a  1  2</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a><span class="co">1  b  3  4</span></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a><span class="co">2  c  5  6</span></span>
<span id="cb2-12"><a href="#cb2-12" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span></code></pre></div>
<div class="sourceCode" id="cb3"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb3-1"><a href="#cb3-1" aria-hidden="true" tabindex="-1"></a>pd.melt(df, id_vars<span class="op">=</span>[<span class="st">&#39;A&#39;</span>], value_vars<span class="op">=</span>[<span class="st">&#39;B&#39;</span>])</span>
<span id="cb3-2"><a href="#cb3-2" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb3-3"><a href="#cb3-3" aria-hidden="true" tabindex="-1"></a><span class="co">   A variable  value</span></span>
<span id="cb3-4"><a href="#cb3-4" aria-hidden="true" tabindex="-1"></a><span class="co">0  a        B      1</span></span>
<span id="cb3-5"><a href="#cb3-5" aria-hidden="true" tabindex="-1"></a><span class="co">1  b        B      3</span></span>
<span id="cb3-6"><a href="#cb3-6" aria-hidden="true" tabindex="-1"></a><span class="co">2  c        B      5</span></span>
<span id="cb3-7"><a href="#cb3-7" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb3-8"><a href="#cb3-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb3-9"><a href="#cb3-9" aria-hidden="true" tabindex="-1"></a>pd.melt(df, id_vars<span class="op">=</span>[<span class="st">&#39;A&#39;</span>], value_vars<span class="op">=</span>[<span class="st">&#39;B&#39;</span>, <span class="st">&#39;C&#39;</span>])</span>
<span id="cb3-10"><a href="#cb3-10" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb3-11"><a href="#cb3-11" aria-hidden="true" tabindex="-1"></a><span class="co">   A variable  value</span></span>
<span id="cb3-12"><a href="#cb3-12" aria-hidden="true" tabindex="-1"></a><span class="co">0  a        B      1</span></span>
<span id="cb3-13"><a href="#cb3-13" aria-hidden="true" tabindex="-1"></a><span class="co">1  b        B      3</span></span>
<span id="cb3-14"><a href="#cb3-14" aria-hidden="true" tabindex="-1"></a><span class="co">2  c        B      5</span></span>
<span id="cb3-15"><a href="#cb3-15" aria-hidden="true" tabindex="-1"></a><span class="co">3  a        C      2</span></span>
<span id="cb3-16"><a href="#cb3-16" aria-hidden="true" tabindex="-1"></a><span class="co">4  b        C      4</span></span>
<span id="cb3-17"><a href="#cb3-17" aria-hidden="true" tabindex="-1"></a><span class="co">5  c        C      6</span></span>
<span id="cb3-18"><a href="#cb3-18" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span></code></pre></div>
<div class="sourceCode" id="cb4"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb4-1"><a href="#cb4-1" aria-hidden="true" tabindex="-1"></a>pd.melt(df, id_vars<span class="op">=</span>[<span class="st">&#39;A&#39;</span>], value_vars<span class="op">=</span>[<span class="st">&#39;B&#39;</span>],</span>
<span id="cb4-2"><a href="#cb4-2" aria-hidden="true" tabindex="-1"></a>        var_name<span class="op">=</span><span class="st">&#39;myVarName&#39;</span>, value_name<span class="op">=</span><span class="st">&#39;myValueName&#39;</span>)</span>
<span id="cb4-3"><a href="#cb4-3" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb4-4"><a href="#cb4-4" aria-hidden="true" tabindex="-1"></a><span class="co">   A myVarName  myValueName</span></span>
<span id="cb4-5"><a href="#cb4-5" aria-hidden="true" tabindex="-1"></a><span class="co">0  a         B            1</span></span>
<span id="cb4-6"><a href="#cb4-6" aria-hidden="true" tabindex="-1"></a><span class="co">1  b         B            3</span></span>
<span id="cb4-7"><a href="#cb4-7" aria-hidden="true" tabindex="-1"></a><span class="co">2  c         B            5</span></span>
<span id="cb4-8"><a href="#cb4-8" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span></code></pre></div>
<div class="sourceCode" id="cb5"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb5-1"><a href="#cb5-1" aria-hidden="true" tabindex="-1"></a>pd.melt(df, id_vars<span class="op">=</span>[<span class="st">&#39;A&#39;</span>], value_vars<span class="op">=</span>[<span class="st">&#39;B&#39;</span>, <span class="st">&#39;C&#39;</span>],</span>
<span id="cb5-2"><a href="#cb5-2" aria-hidden="true" tabindex="-1"></a>        ignore_index<span class="op">=</span><span class="va">False</span>)</span>
<span id="cb5-3"><a href="#cb5-3" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb5-4"><a href="#cb5-4" aria-hidden="true" tabindex="-1"></a><span class="co">   A variable  value</span></span>
<span id="cb5-5"><a href="#cb5-5" aria-hidden="true" tabindex="-1"></a><span class="co">0  a        B      1</span></span>
<span id="cb5-6"><a href="#cb5-6" aria-hidden="true" tabindex="-1"></a><span class="co">1  b        B      3</span></span>
<span id="cb5-7"><a href="#cb5-7" aria-hidden="true" tabindex="-1"></a><span class="co">2  c        B      5</span></span>
<span id="cb5-8"><a href="#cb5-8" aria-hidden="true" tabindex="-1"></a><span class="co">0  a        C      2</span></span>
<span id="cb5-9"><a href="#cb5-9" aria-hidden="true" tabindex="-1"></a><span class="co">1  b        C      4</span></span>
<span id="cb5-10"><a href="#cb5-10" aria-hidden="true" tabindex="-1"></a><span class="co">2  c        C      6</span></span>
<span id="cb5-11"><a href="#cb5-11" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span></code></pre></div>
<div class="sourceCode" id="cb6"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb6-1"><a href="#cb6-1" aria-hidden="true" tabindex="-1"></a><span class="co"># 多重索引</span></span>
<span id="cb6-2"><a href="#cb6-2" aria-hidden="true" tabindex="-1"></a>df.columns <span class="op">=</span> [<span class="bu">list</span>(<span class="st">&#39;ABC&#39;</span>), <span class="bu">list</span>(<span class="st">&#39;DEF&#39;</span>)]</span>
<span id="cb6-3"><a href="#cb6-3" aria-hidden="true" tabindex="-1"></a>df</span>
<span id="cb6-4"><a href="#cb6-4" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb6-5"><a href="#cb6-5" aria-hidden="true" tabindex="-1"></a><span class="co">   A  B  C</span></span>
<span id="cb6-6"><a href="#cb6-6" aria-hidden="true" tabindex="-1"></a><span class="co">   D  E  F</span></span>
<span id="cb6-7"><a href="#cb6-7" aria-hidden="true" tabindex="-1"></a><span class="co">0  a  1  2</span></span>
<span id="cb6-8"><a href="#cb6-8" aria-hidden="true" tabindex="-1"></a><span class="co">1  b  3  4</span></span>
<span id="cb6-9"><a href="#cb6-9" aria-hidden="true" tabindex="-1"></a><span class="co">2  c  5  6</span></span>
<span id="cb6-10"><a href="#cb6-10" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb6-11"><a href="#cb6-11" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-12"><a href="#cb6-12" aria-hidden="true" tabindex="-1"></a><span class="co"># 选择最外层索引</span></span>
<span id="cb6-13"><a href="#cb6-13" aria-hidden="true" tabindex="-1"></a>pd.melt(df, col_level<span class="op">=</span><span class="dv">0</span>, id_vars<span class="op">=</span>[<span class="st">&#39;A&#39;</span>], value_vars<span class="op">=</span>[<span class="st">&#39;B&#39;</span>])</span>
<span id="cb6-14"><a href="#cb6-14" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb6-15"><a href="#cb6-15" aria-hidden="true" tabindex="-1"></a><span class="co">   A variable  value</span></span>
<span id="cb6-16"><a href="#cb6-16" aria-hidden="true" tabindex="-1"></a><span class="co">0  a        B      1</span></span>
<span id="cb6-17"><a href="#cb6-17" aria-hidden="true" tabindex="-1"></a><span class="co">1  b        B      3</span></span>
<span id="cb6-18"><a href="#cb6-18" aria-hidden="true" tabindex="-1"></a><span class="co">2  c        B      5</span></span>
<span id="cb6-19"><a href="#cb6-19" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb6-20"><a href="#cb6-20" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-21"><a href="#cb6-21" aria-hidden="true" tabindex="-1"></a><span class="co"># 选择内层索引</span></span>
<span id="cb6-22"><a href="#cb6-22" aria-hidden="true" tabindex="-1"></a>pd.melt(df, col_level<span class="op">=</span><span class="dv">1</span>, id_vars<span class="op">=</span>[<span class="st">&#39;D&#39;</span>], value_vars<span class="op">=</span>[<span class="st">&#39;E&#39;</span>])</span>
<span id="cb6-23"><a href="#cb6-23" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb6-24"><a href="#cb6-24" aria-hidden="true" tabindex="-1"></a><span class="co"># 选择复合索引</span></span>
<span id="cb6-25"><a href="#cb6-25" aria-hidden="true" tabindex="-1"></a>pd.melt(df, id_vars<span class="op">=</span>[(<span class="st">&#39;A&#39;</span>, <span class="st">&#39;D&#39;</span>)], value_vars<span class="op">=</span>[(<span class="st">&#39;B&#39;</span>, <span class="st">&#39;E&#39;</span>)])</span>
<span id="cb6-26"><a href="#cb6-26" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span>
<span id="cb6-27"><a href="#cb6-27" aria-hidden="true" tabindex="-1"></a><span class="co">  (A, D) variable_0 variable_1  value</span></span>
<span id="cb6-28"><a href="#cb6-28" aria-hidden="true" tabindex="-1"></a><span class="co">0      a          B          E      1</span></span>
<span id="cb6-29"><a href="#cb6-29" aria-hidden="true" tabindex="-1"></a><span class="co">1      b          B          E      3</span></span>
<span id="cb6-30"><a href="#cb6-30" aria-hidden="true" tabindex="-1"></a><span class="co">2      c          B          E      5</span></span>
<span id="cb6-31"><a href="#cb6-31" aria-hidden="true" tabindex="-1"></a><span class="co">&#39;&#39;&#39;</span></span></code></pre></div>]]></description>
</item>
<item>
    <title>flip</title>
    <link>https://blog.vllbc.top/flip/</link>
    <pubDate>Sat, 01 Jan 2022 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/flip/</guid>
    <description><![CDATA[<p>矩阵的反转，可以按照各个维度很好理解。 例子：</p>
<pre class="python3"><code>cs_matrix = np.array([[ 4,  3,  2,  1,  0], [ 8,  7,  6,  5,  1], [11, 10,  9,  6,  2], [13, 12, 10,  7,  3], [14, 13, 11,  8,  4]])
np.flip(cs_matrix, 0)</code></pre>
<p>
变成了： </p>
<pre class="python3"><code>np.flip(cs_matrix, 1)</code></pre>
<p>变成了： </p>]]></description>
</item>
<item>
    <title>apply_along_axis</title>
    <link>https://blog.vllbc.top/apply_along_axis/</link>
    <pubDate>Fri, 03 Sep 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/apply_along_axis/</guid>
    <description><![CDATA[<p>类似于pandas的apply，就是在某一维上进行定义的函数操作</p>
<pre class="python3"><code>apply_along_axis(func1d, axis, arr, *args, **kwargs)</code></pre>
<p>官网的例子</p>
<div class="sourceCode" id="cb2"><pre
class="sourceCode python"><code class="sourceCode python"><span id="cb2-1"><a href="#cb2-1" aria-hidden="true" tabindex="-1"></a><span class="kw">def</span> my_func(a):</span>
<span id="cb2-2"><a href="#cb2-2" aria-hidden="true" tabindex="-1"></a>    <span class="cf">return</span> (a[<span class="dv">0</span>] <span class="op">+</span> a[<span class="op">-</span><span class="dv">1</span>]) <span class="op">*</span> <span class="fl">0.5</span></span>
<span id="cb2-3"><a href="#cb2-3" aria-hidden="true" tabindex="-1"></a>b <span class="op">=</span> np.array([[<span class="dv">1</span>,<span class="dv">2</span>,<span class="dv">3</span>], [<span class="dv">4</span>,<span class="dv">5</span>,<span class="dv">6</span>], [<span class="dv">7</span>,<span class="dv">8</span>,<span class="dv">9</span>]])</span>
<span id="cb2-4"><a href="#cb2-4" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-5"><a href="#cb2-5" aria-hidden="true" tabindex="-1"></a>np.apply_along_axis(my_func, <span class="dv">0</span>, b)</span>
<span id="cb2-6"><a href="#cb2-6" aria-hidden="true" tabindex="-1"></a><span class="co"># 结果</span></span>
<span id="cb2-7"><a href="#cb2-7" aria-hidden="true" tabindex="-1"></a>array([ <span class="fl">4.</span>,  <span class="fl">5.</span>,  <span class="fl">6.</span>])</span>
<span id="cb2-8"><a href="#cb2-8" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-9"><a href="#cb2-9" aria-hidden="true" tabindex="-1"></a><span class="co"># 结果</span></span>
<span id="cb2-10"><a href="#cb2-10" aria-hidden="true" tabindex="-1"></a></span>
<span id="cb2-11"><a href="#cb2-11" aria-hidden="true" tabindex="-1"></a>array([ <span class="fl">2.</span>,  <span class="fl">5.</span>,  <span class="fl">8.</span>])</span></code></pre></div>]]></description>
</item>
<item>
    <title>as_strided</title>
    <link>https://blog.vllbc.top/as_strided/</link>
    <pubDate>Sun, 14 Feb 2021 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://blog.vllbc.top/as_strided/</guid>
    <description><![CDATA[<p>调用为<code>np.lib.stride_tricks.as_strided()</code>
可以分割一个数组为不同的shape块，有个问题就是什么是strides呢？可以看个例子：</p>]]></description>
</item>
</channel>
</rss>
