<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>vllbc02</title>
        <link>https://vllbc.top/</link>
        <description>vllbc&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>m18265090197@163.com (vllbc)</managingEditor>
            <webMaster>m18265090197@163.com (vllbc)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Fri, 29 Mar 2024 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="https://vllbc.top/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>shortcode(置顶)</title>
    <link>https://vllbc.top/shortcode%E7%BD%AE%E9%A1%B6/</link>
    <pubDate>Tue, 07 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/shortcode%E7%BD%AE%E9%A1%B6/</guid>
    <description><![CDATA[贴一下可以玩的shortcode。 音乐播放 播放列表 播放单曲 视频播放 bilibili 有多P可以选择集数 youtube admonition 类型有：note、abstract、info、ti]]></description>
</item>
<item>
    <title>课程表（拓扑排序）</title>
    <link>https://vllbc.top/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</link>
    <pubDate>Fri, 29 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E8%AF%BE%E7%A8%8B%E8%A1%A8%E6%8B%93%E6%89%91%E6%8E%92%E5%BA%8F/</guid>
    <description><![CDATA[Problem: 思路 注意拓扑排序最好是邻接表（哈系表实现），并用队列处理后续入度为0的点 解题方法 描述你的解题方法 复杂度 时间复杂度: 添加时间复杂度, 示例： \(O(n)\)]]></description>
</item>
<item>
    <title>乘积最大的数组</title>
    <link>https://vllbc.top/%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%E7%BB%84/</link>
    <pubDate>Mon, 18 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E4%B9%98%E7%A7%AF%E6%9C%80%E5%A4%A7%E7%9A%84%E6%95%B0%E7%BB%84/</guid>
    <description><![CDATA[Problem: 思路 讲述看到这一题的思路 解题方法 描述你的解题方法 复杂度 时间复杂度: 添加时间复杂度, 示例： \(O(n)\) 空间复杂度: 添加空间复杂度, 示例： \(O(n)\) Code]]></description>
</item>
<item>
    <title>跳跃游戏</title>
    <link>https://vllbc.top/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</link>
    <pubDate>Mon, 18 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F/</guid>
    <description><![CDATA[跳跃游戏 Problem: 思路 讲述看到这一题的思路 解题方法 描述你的解题方法 复杂度 时间复杂度: 添加时间复杂度, 示例： \(O(n)\) 空间复杂度: 添加空间复杂度, 示例： \(O(n)\) Code ```Python3]]></description>
</item>
<item>
    <title>缺失的第一个正数</title>
    <link>https://vllbc.top/%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</link>
    <pubDate>Sat, 16 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E7%BC%BA%E5%A4%B1%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%AD%A3%E6%95%B0/</guid>
    <description><![CDATA[41. 缺失的第一个正数 - 力扣（LeetCode） 空间复杂度o(n)很好想，但o(1)不好想，还是个408考研真题 注意O(n) == O(2n)，即相较]]></description>
</item>
<item>
    <title>Adapter Tuning</title>
    <link>https://vllbc.top/adapter-tuning/</link>
    <pubDate>Thu, 14 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/adapter-tuning/</guid>
    <description><![CDATA[]]></description>
</item>
<item>
    <title>ICL</title>
    <link>https://vllbc.top/icl/</link>
    <pubDate>Thu, 14 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/icl/</guid>
    <description><![CDATA[ICL即In-contexting Learning。 ICL 包含三种分类： - Few-shot learning，允许输入数条示例和一则任务说明； - One-shot learnin]]></description>
</item>
<item>
    <title>和为K的子数组</title>
    <link>https://vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</link>
    <pubDate>Thu, 14 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84/</guid>
    <description><![CDATA[题目地址 # 思路 通过前缀和+哈希表，并有简单的数学变换。前缀和即 \(y[i]=y[i-1]+x[i]\) 类比于accumlate函数，注意前缀和思想也可以应用为“前缀积、后缀和、后]]></description>
</item>
<item>
    <title>和为K的子数组</title>
    <link>https://vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84-1/</link>
    <pubDate>Thu, 14 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E5%92%8C%E4%B8%BAk%E7%9A%84%E5%AD%90%E6%95%B0%E7%BB%84-1/</guid>
    <description><![CDATA[题目地址 # 思路 通过前缀和+哈希表，并有简单的数学变换。前缀和即 \(y[i]=y[i-1]+x[i]\) 类比于accumlate函数，注意前缀和思想也可以应用为“前缀积、后缀和、后]]></description>
</item>
<item>
    <title>并查集</title>
    <link>https://vllbc.top/%E5%B9%B6%E6%9F%A5%E9%9B%86/</link>
    <pubDate>Wed, 13 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author>vllbc</author>
    <guid>https://vllbc.top/%E5%B9%B6%E6%9F%A5%E9%9B%86/</guid>
    <description><![CDATA[def find(x): if (p[x] != x): p[x] = find(p[x]) return p[x] 上面是y总的模板，实现了路径压缩。]]></description>
</item>
</channel>
</rss>
